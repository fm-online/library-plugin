{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-dcc5c3137cd472dd0002d85b562efd23162e3eff53ca4438a6251e6c46e3b8299076255380d1d42f386510cb6f2cbaab49fa5b5f253be459cdc3869428c5c400",
            "file": "projects/fm-library/src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "HelperService",
            "id": "injectable-HelperService-42a7cba204fb6e06f39978094c9ddfde56fe18f9bf29d3d68626abac4a00cd0019763909aa9cbb413f3bcd48353c121ed26cdf0f8e163e12d71a5b513c8adc9f",
            "file": "projects/fm-library/src/lib/services/helper.service.ts",
            "properties": [
                {
                    "name": "displaySizeDesktopL",
                    "defaultValue": "1920",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "displaySizeDesktopM",
                    "defaultValue": "1366",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "displaySizeDesktopS",
                    "defaultValue": "1280",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "displaySizeSmallest",
                    "defaultValue": "540",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "displaySizeTablet",
                    "defaultValue": "1024",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "convertMobileFont",
                    "args": [
                        {
                            "name": "baseSize",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "factor",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "baseSize",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "factor",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isBiggerThanFullHD",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isMobile",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isMobileOrTablet",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isSmallest",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateScreenSizes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class HelperService {\r\n\r\n  public getWidth: any;\r\n  public getHeight: any;\r\n\r\n  private displaySizeSmallest = 540;\r\n  private displaySizeTablet = 1024;\r\n  private displaySizeDesktopS = 1280;\r\n  private displaySizeDesktopM = 1366;\r\n  private displaySizeDesktopL = 1920;\r\n\r\n  constructor() {\r\n    this.getWidth = window.innerWidth;\r\n    this.getHeight = window.innerHeight;\r\n  }\r\n\r\n  public updateScreenSizes() {\r\n    this.getWidth = window.innerWidth;\r\n    this.getHeight = window.innerHeight;\r\n  }\r\n\r\n  isSmallest() {\r\n    return this.getWidth < this.displaySizeSmallest ? true : false;\r\n  }\r\n\r\n  isMobile() {\r\n    return this.getWidth < this.displaySizeTablet ? true : false;\r\n  }\r\n\r\n  isMobileOrTablet() {\r\n    return this.getWidth < this.displaySizeDesktopS ? true : false;\r\n  }\r\n\r\n  isBiggerThanFullHD() {\r\n    return this.getWidth > this.displaySizeDesktopL ? true : false;\r\n  }\r\n\r\n  convertMobileFont(baseSize: string, factor: number) {\r\n    const sizeNumber = parseInt(baseSize.substring(0, baseSize.length - 2));\r\n    const mobileSizeNumber = sizeNumber * factor;\r\n    return mobileSizeNumber.toString() + 'px';\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-b9200329796202a2030df9ad0c39d5e1f10792e646ecc7703fbdb30633f757e4698816fc1a3b688f54d96e0f1b7c20d63e0ee2f7074148e03bb5270d54534ac7",
            "file": "projects/fm-library/src/lib/buttons/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoWidth",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "iconButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "iconRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "screen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HelperService",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onWindowResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostListener, Input,Output } from '@angular/core';\r\nimport { HelperService } from '../../services/helper.service';\r\n\r\n@Component({\r\n  selector: 'lib-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss']\r\n})\r\nexport class ButtonComponent {\r\n  @Input() iconButton: boolean = false;\r\n  @Input() light: boolean = false;\r\n  @Input() type!: string;\r\n  @Input() value!: string;\r\n  @Input() label!: string;\r\n  @Input() icon: any;\r\n  @Input() disabled: boolean = false;\r\n  @Input() iconLeft: any;\r\n  @Input() iconRight: any;\r\n  @Input() width!: string;\r\n  @Input() autoWidth: boolean = false;\r\n  @Output() public buttonValue:EventEmitter<any> = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    public screen: HelperService\r\n  ) {}\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onWindowResize() {\r\n    this.screen.updateScreenSizes();\r\n  }\r\n\r\n  getValue() {\r\n    this.buttonValue.emit(this.type);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\"; \r\n\r\n.da-button-single {\r\n    font-family: $font;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    &:hover > .da-button-icon-label{\r\n        display: block;\r\n    }\r\n\r\n    button {\r\n        width: 160px;\r\n        height: 50px;\r\n        border: 1px solid $button-base-color;\r\n        color: $button-base-color;\r\n        fill: $button-base-color;\r\n        font-size: $t2-base-size;\r\n        font-family: $font;\r\n        border-radius: 25px 25px 25px 0;\r\n        background: transparent;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 0 5px;\r\n        cursor: pointer;\r\n\r\n        &.mobile {\r\n            width: 104px;\r\n            height: 40px;\r\n            font-size: 20px;\r\n        }\r\n\r\n        &.light {\r\n            border: 1px solid $input-secondary-color;\r\n            color: $input-secondary-color;\r\n            fill: $input-secondary-color;\r\n        }\r\n\r\n        &.short {\r\n            width: 50px;\r\n            justify-content: center;\r\n\r\n            &.mobile {\r\n                width: 40px;\r\n            }\r\n        }\r\n\r\n        &.auto-width {\r\n            width: 100%;\r\n\r\n        }\r\n\r\n        &:hover,\r\n        &:active {\r\n            border: 1px solid $button-base-color;\r\n            background: $button-base-color;\r\n            color: $t2-secondary-color;\r\n            fill: $t2-secondary-color;\r\n\r\n            &.light {\r\n                border: 1px solid $input-secondary-color;\r\n                background: $input-secondary-color;\r\n                color: $t2-base-color;\r\n                fill: $t2-base-color;\r\n            }\r\n        }\r\n\r\n        &:active {\r\n            padding: 0;\r\n        }\r\n\r\n        &.disabled {\r\n            opacity: 0.2;\r\n        }\r\n\r\n        .da-button-label {\r\n            width: 100%;\r\n            text-align: center;\r\n            display: block;\r\n        }\r\n\r\n        .da-button-icon {\r\n            display: flex;\r\n            align-items: flex-end;\r\n            \r\n            svg {\r\n                height: 14px;\r\n                width: auto;\r\n            }\r\n            &.left {\r\n                margin-left: 10px;\r\n            }\r\n\r\n            &.right {\r\n                margin-right: 10px;\r\n            }\r\n\r\n            &.main {\r\n                svg {\r\n                    height: 28px;\r\n                    width: auto;\r\n                }\r\n\r\n                &.mobile {\r\n                    svg {\r\n                        height: 20px;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .da-button-icon-label {\r\n        font-family: $font;\r\n        color: $button-base-color;\r\n        display: none;\r\n        position: absolute;\r\n        white-space: nowrap;\r\n        bottom: -25px;\r\n\r\n        &.light {\r\n            color: $input-secondary-color;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"da-button-single\">\r\n    <button \r\n        (click)=\"getValue()\" \r\n        [ngClass]=\"{'light' : light, 'short' : iconButton, 'disabled' : disabled, 'auto-width' : autoWidth, 'mobile' : screen.isSmallest()}\" \r\n        [disabled]=\"disabled\"\r\n        [ngStyle]=\"{'width': width ? width + 'px' : ''}\"\r\n        #target\r\n    >\r\n        <svg-icon *ngIf=\"iconLeft\" \r\n            class=\"da-button-icon left\" \r\n            [src]=\"iconLeft\"\r\n        >\r\n        </svg-icon>\r\n        <span class=\"da-button-label\" *ngIf=\"value\">{{ value }}</span> \r\n        <svg-icon *ngIf=\"icon\" \r\n            class=\"da-button-icon main\" \r\n            [ngClass]=\"{'mobile' : screen.isSmallest()}\"\r\n            [src]=\"icon\"\r\n        >\r\n        </svg-icon>\r\n        <svg-icon *ngIf=\"iconRight\" \r\n            class=\"da-button-icon right\" \r\n            [src]=\"iconRight\"\r\n        >\r\n        </svg-icon>\r\n    </button>\r\n    <div *ngIf=\"icon\" class=\"da-button-icon-label\" [ngClass]=\"{'light' : light}\">{{label}}</div>\r\n</div>\r\n"
        },
        {
            "name": "ButtonGroupComponent",
            "id": "component-ButtonGroupComponent-a90ad60fda8e50b95285ac7677ee623a3ec0b5b5f9be61802195785e24a0a3307d42268704830182b11ff7d8a171cbe2969e26319fd74e72313312b5ce1ea612",
            "file": "projects/fm-library/src/lib/buttons/button-group/button-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-button-group",
            "styleUrls": [
                "./button-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonValue",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "localValue",
                    "defaultValue": "'localValue'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "screen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HelperService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onWindowResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ]
                },
                {
                    "name": "sendValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\r\nimport { HelperService } from '../../services/helper.service';\r\n\r\n@Component({\r\n  selector: 'lib-button-group',\r\n  templateUrl: './button-group.component.html',\r\n  styleUrls: ['./button-group.component.scss']\r\n})\r\nexport class ButtonGroupComponent implements OnInit {\r\n  @Input() buttons: any;\r\n  @Input() light: boolean = false;\r\n  localValue: string = 'localValue';\r\n  @Output() public buttonValue: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(\r\n    public screen: HelperService\r\n  ) { }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n    onWindowResize() {\r\n      this.screen.updateScreenSizes();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendValue(e: any) {\r\n    this.localValue = e;\r\n    this.buttonValue.emit(e);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".da-buttons {\r\n    width: 100%;\r\n    display: flex;\r\n    column-gap: 24px;\r\n    row-gap: 24px;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    max-width: 1366px;\r\n\r\n    &.mobile {\r\n        column-gap: 10px;\r\n    }\r\n}",
                    "styleUrl": "./button-group.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"da-buttons\" [ngClass]=\"{'mobile' : screen.isSmallest()}\" >\r\n    <ng-container *ngFor=\"let button of buttons; let num = index\">\r\n        <lib-button \r\n            [label]=\"button.label\"\r\n            [light]=\"light\"\r\n            [type]=\"button.type\"\r\n            [iconButton]=\"button.iconButton\"\r\n            [icon]=\"button.icon\"\r\n            [iconRight]=\"button.iconRight\"\r\n            [iconLeft]=\"button.iconLeft\"\r\n            [disabled]=\"button.disabled\"\r\n            [value]=\"button.value\"\r\n            (buttonValue)=\"sendValue($event)\">\r\n        </lib-button>\r\n    </ng-container>\r\n</div>"
        },
        {
            "name": "CounterComponent",
            "id": "component-CounterComponent-fa70d456336f929e3cadeb391cd4293f943931f93a1da52515b520a71bf701abf453085c28c937bf01a50022e498b46cf6ab5f7bb90e97783cea19b8a13d2181",
            "file": "projects/fm-library/src/lib/counter/counter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-counter",
            "styleUrls": [
                "./counter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./counter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "max",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'test'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'0 00'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "counterValue",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "count",
                    "args": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "min",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "max",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "step",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "min",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "max",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "step",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-counter',\r\n  templateUrl: './counter.component.html',\r\n  styleUrls: ['./counter.component.scss']\r\n})\r\nexport class CounterComponent implements OnInit {\r\n  @Input() name: string = 'test';\r\n  @Input() placeholder: string = '0 00';\r\n  @Input() value: number = 0;\r\n  @Input() step: number = 1;\r\n  @Input() min: number = 0;\r\n  @Input() max: number = 10;\r\n  @Input() light: boolean = false;\r\n\r\n  @Output() public counterValue:EventEmitter<any> = new EventEmitter<number>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  count(element: any, type: string, min: number, max: number, step: number) {\r\n    let newCount, oldCount;\r\n\r\n    if (element.value !== '') {\r\n      oldCount = parseInt(element.value);\r\n      if (type === 'up') {\r\n        if(element.value < max) {\r\n          newCount = oldCount + step;\r\n        } else {\r\n          newCount = max\r\n        }\r\n        element.value = newCount;\r\n      } else {\r\n        if(element.value > min) {\r\n          newCount = oldCount - step;\r\n        } else {\r\n          newCount = min\r\n        }\r\n        element.value = newCount;\r\n      }\r\n    } else {\r\n      newCount = min\r\n      element.value = newCount;\r\n    }\r\n\r\n    this.counterValue.emit(newCount);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles.scss\"; \r\n\r\n.da-counter-wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 155px;\r\n    height: 42px;\r\n\r\n    .da-counter {\r\n        font-family: $font;\r\n        width: 65px;\r\n        height: 42px;\r\n        border-radius: 21px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background-color: #fff;\r\n        box-shadow: 0 3px 5px $shadow-base-color;\r\n\r\n        &.light {\r\n            box-shadow: 0 3px 5px $shadow-secondary-color;\r\n        }\r\n    \r\n        input {\r\n            border: none;\r\n            text-align: center;\r\n            width: 35px;\r\n            padding: 0;\r\n            font-family: $font;\r\n            font-size: $t2-base-size;\r\n        }\r\n    }\r\n    .da-counter-btn {\r\n        color: $button-base-color;\r\n        fill: $button-base-color;\r\n        border: none;\r\n        width: 30px;\r\n        height: 30px;\r\n        border-radius: 15px;\r\n        background-color: #fff;\r\n        box-shadow: 0 3px 5px $shadow-base-color;\r\n        cursor: pointer;\r\n\r\n        svg {\r\n            margin-top: 2px;\r\n        }\r\n\r\n        &.light {\r\n            box-shadow: 0 3px 5px $shadow-secondary-color;\r\n        }\r\n\r\n        &:hover {\r\n            background-color: $button-base-color;\r\n            color: #fff;\r\n            fill: #fff;\r\n\r\n            &.light {\r\n                background-color: $button-secondary-color;\r\n                color: $button-base-color;\r\n                fill: $button-base-color;\r\n            }\r\n        }\r\n\r\n        &:active {\r\n            background-color: $button-base-color;\r\n            color: #fff;\r\n            fill: #fff;\r\n\r\n            &.light {\r\n                background-color: $button-secondary-color;\r\n                color: $button-base-color;\r\n                fill: $button-base-color;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n",
                    "styleUrl": "./counter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"da-counter-wrapper\">\r\n    <button \r\n        type=\"button\" \r\n        class=\"da-counter-btn left\" \r\n        (click)=\"count(counter, 'down', min, max, step)\"\r\n        [ngClass]=\"{'light' : light}\"\r\n    >\r\n        <svg-icon class=\"da-switch-icon\" src=\"assets/images/minus.svg\"></svg-icon>\r\n    </button>\r\n    <label class=\"da-counter\" [ngClass]=\"{'light' : light}\">\r\n        <input\r\n        type=\"string\" \r\n        [placeholder]=\"placeholder\"\r\n        [step]=step\r\n        [min]=min\r\n        [max]=max\r\n        #counter\r\n        [name]=\"name\"\r\n        [value]=value />\r\n    </label>\r\n    <button \r\n        type=\"button\" \r\n        class=\"da-counter-btn right\" \r\n        (click)=\"count(counter, 'up', min, max, step)\"\r\n        [ngClass]=\"{'light' : light}\"\r\n    >\r\n        <svg-icon class=\"da-switch-icon\" src=\"assets/images/plus.svg\"></svg-icon>\r\n    </button>\r\n</div>\r\n"
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-3b323a50d4dad97f8da19b0c5930d2d6bdf1ea5fd7378dbef2ca3320ffdc741f556c150479c1e79bf46594e06d2a393b817993de73b1a84189c99c95d0a1e2cc",
            "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-dropdown",
            "styleUrls": [
                "./dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoWidth",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'assets/images/circleCheck.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "info",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selectedItem",
                    "defaultValue": "{'value': '', 'viewValue': 'bitte auswählen'}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "selectItems",
                    "defaultValue": "[{'value': '', 'viewValue': 'bitte auswählen'}]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "success",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "infoValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "selectValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getInfo",
                    "args": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-dropdown',\r\n  templateUrl: './dropdown.component.html',\r\n  styleUrls: ['./dropdown.component.scss']\r\n})\r\nexport class DropdownComponent {\r\n  @Input() name!: string;\r\n  @Input() label!: string;\r\n  @Input() selectItems: any = [{'value': '', 'viewValue': 'bitte auswählen'}];\r\n  @Input() icon: string = 'assets/images/circleCheck.svg';\r\n  @Input() light: boolean = false;\r\n  @Input() info: string = '';\r\n  @Input() selectedItem: any = {'value': '', 'viewValue': 'bitte auswählen'};\r\n  @Input() autoWidth: boolean = false;\r\n  @Input() success: boolean = false;\r\n\r\n  @Output() public selectValue:EventEmitter<any> = new EventEmitter<string>();\r\n  @Output() public infoValue:EventEmitter<any> = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  getValue(e: any) {\r\n    this.success = true;\r\n    this.selectValue.emit(e);\r\n  }\r\n\r\n  getInfo(e: string) {\r\n    this.infoValue.emit(e);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\"; \r\n\r\n.mat-option,\r\n.mat-select {\r\n    font-family: $font!important;\r\n    color: $button-base-color!important;\r\n}\r\n\r\n.mat-select {\r\n    padding-top: 4px!important;\r\n}\r\n\r\n.mat-option {\r\n text-align: center!important;\r\n border-radius: 24px!important;\r\n\r\n &:hover {\r\n     background-color: $radiobutton-base-color!important;\r\n }\r\n}\r\n\r\n.mat-option-disabled {\r\n    opacity: 0.5!important;\r\n}\r\n\r\n.mat-form-field {\r\n    margin-top: -8px!important;\r\n    font-family: $font!important;\r\n    width: 185px!important;\r\n    text-align: center!important;\r\n}\r\n\r\n.da-input-select-single {\r\n    font-family: $font!important;\r\n    position: relative;\r\n    background: #fff;\r\n    border-radius: 24px;\r\n    border: 0px solid transparent;\r\n    border-bottom: 1px solid $button-base-color;\r\n    box-shadow: 0 3px 5px $shadow-base-color;\r\n    height: 42px;\r\n    width: 185px;\r\n\r\n    &.auto-width {\r\n        width: 100%;\r\n\r\n        .mat-form-field {\r\n            width: 100%!important;\r\n        }\r\n    }\r\n\r\n    &.light {\r\n        box-shadow: 0 3px 5px $shadow-secondary-color;\r\n    }\r\n\r\n    .da-input-select-label {\r\n        font-size: $t4-base-size;\r\n        top: -18px;\r\n        position: absolute;\r\n        margin-left: 20px;\r\n        color: $t4-base-color;\r\n    \r\n        &.light {\r\n            color: $t4-secondary-color;\r\n        }\r\n    }\r\n\r\n    .da-input-select {\r\n        display: flex;\r\n        align-items: start;\r\n\r\n        .da-input-info-button {\r\n            top: 5px;\r\n            position: absolute;\r\n            right: -29px;\r\n        }\r\n    }\r\n\r\n    .da-input-select-success-icon {\r\n        color: $success-color;\r\n        fill: $success-color;\r\n        margin-top: 8px;\r\n        margin-left: 8px;\r\n        position: absolute;\r\n        font-size: 25px;\r\n        width: 23px;\r\n        height: 23px;\r\n        border-radius: 25px;\r\n        box-shadow: 0 3px 5px $shadow-base-color;\r\n\r\n    }\r\n}",
                    "styleUrl": "./dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "templateData": "\r\n<div class=\"da-input-select-single\" [ngClass]=\"{'light' : light, 'auto-width' : autoWidth}\">\r\n  <div class=\"da-input-select-label\" [ngClass]=\"{'light' : light}\">{{label}}</div>\r\n  <label class=\"da-input-select\">\r\n    <svg-icon [src]=\"icon\" class=\"da-input-select-success-icon\" *ngIf=\"success\"></svg-icon>\r\n    <mat-form-field appearance=\"fill\" class=\"da-input-select-select\">\r\n      <mat-select \r\n        (valueChange)=\"getValue($event)\" \r\n        [(value)]=\"selectedItem.value\"\r\n      >\r\n        <mat-option disabled [value]=\"selectedItem.value\">{{selectedItem.viewValue}}</mat-option>\r\n        <mat-option *ngFor=\"let item of selectItems\" [value]=\"item.value\">\r\n          {{item.viewValue}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <div class=\"da-input-info-button\" *ngIf=\"info\">\r\n        <lib-info-button \r\n          [light]=\"light\" \r\n          [id]=\"info\"\r\n          (infoPressed)=\"getInfo($event)\"\r\n        ></lib-info-button>\r\n    </div>\r\n  </label>\r\n</div>"
        },
        {
            "name": "HeaderButtonComponent",
            "id": "component-HeaderButtonComponent-14364dfb66f18db41ec7d2229d655505755757500084f63b6a972982568811574ebcdd69a0924c3889d5c4d90d789c6a934f4eaad7dd41cd181489ddf8e135aa",
            "file": "projects/fm-library/src/lib/buttons/header-button/header-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-header-button",
            "styleUrls": [
                "./header-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "inactive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "screen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HelperService",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onWindowResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\nimport { HelperService } from '../../services/helper.service';\r\n\r\n@Component({\r\n  selector: 'lib-header-button',\r\n  templateUrl: './header-button.component.html',\r\n  styleUrls: ['./header-button.component.scss']\r\n})\r\nexport class HeaderButtonComponent {\r\n  @Input() inactive: boolean = false;\r\n  @Input() active: boolean = false;\r\n  @Input() type!: string;\r\n  @Input() value!: string;\r\n  @Input() label!: string;\r\n  @Input() icon: any;\r\n  @Input() disabled: boolean = false;\r\n  @Output() public buttonValue:EventEmitter<any> = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    public screen: HelperService\r\n  ) {}\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n    onWindowResize() {\r\n      this.screen.updateScreenSizes();\r\n  }\r\n\r\n  getValue() {\r\n    this.buttonValue.emit(this.type);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\"; \r\n\r\n.da-header-button-single {\r\n    font-family: $font;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    button {\r\n        border: none;\r\n        min-height: 22px;\r\n        min-width: 22px;\r\n        color: $button-base-color;\r\n        font-size: $t1-base-size;\r\n        font-family: $font;\r\n        transition: all 0.4s ease-in-out 0s, visibility 0s;\r\n        border-radius: 25px;\r\n        background: transparent;\r\n        padding: 8px 12px;\r\n        cursor: pointer;\r\n\r\n        &.mobile {\r\n            min-height: 20px;\r\n            min-width: 20px;\r\n        }\r\n\r\n        &:hover,\r\n        &:active {\r\n            background: $body-base-color;\r\n        }\r\n\r\n        &.inactive {\r\n            color: $body-base-color;\r\n\r\n            &:hover,\r\n            &:active {\r\n                color: $button-base-color;\r\n            }\r\n        }\r\n\r\n        &.active, \r\n        &.disabled {\r\n            cursor: default;\r\n\r\n            &:hover,\r\n            &:active {\r\n                background: transparent;\r\n            }\r\n        }\r\n        &.disabled {\r\n            opacity: 0.2;\r\n        }\r\n        &.icon {\r\n            padding: 5px 10px;\r\n        }\r\n\r\n        .da-header-button-label {\r\n            width: 100%;\r\n            text-align: center;\r\n            display: block;\r\n        }\r\n\r\n        .da-header-button-icon {\r\n            font-size: 22px;\r\n            fill: $button-base-color;\r\n\r\n                &.mobile {\r\n                    font-size: 20px;\r\n                }\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./header-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"da-header-button-single\">\r\n    <button \r\n        (click)=\"getValue()\" \r\n        [ngClass]=\"{'inactive' : inactive, 'active' : active, 'disabled' : disabled, 'icon' : icon, 'mobile' : screen.isSmallest()}\" \r\n        [disabled]=\"disabled || active\"\r\n        #target\r\n    >\r\n        <svg-icon  *ngIf=\"icon; else buttonLabel\" \r\n            class=\"da-header-button-icon\" \r\n            [ngClass]=\"{'mobile' : screen.isSmallest()}\"\r\n            [src]=\"icon\"\r\n        >\r\n        </svg-icon>\r\n        <ng-template class=\"da-header-button-label\" #buttonLabel>\r\n            <span>\r\n                {{ value }}\r\n            </span>\r\n        </ng-template> \r\n    </button>\r\n</div>"
        },
        {
            "name": "HeaderTextComponent",
            "id": "component-HeaderTextComponent-5f2e39964804d5ebc44ea0438ca9c07a8ff21a438533f148b4950c69a8e3ce685e4e3ec4db7fe1a709ba9a30b1e54932cf2d7e12281203f12473a81a23ad292a",
            "file": "projects/fm-library/src/lib/text/header-text/header-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-header-text",
            "styleUrls": [
                "./header-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "convertMobile",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "info",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'38px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "thin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "infoValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "mobileLineHeight",
                    "defaultValue": "'34px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "mobileSize",
                    "defaultValue": "'25px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "screen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HelperService",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getInfo",
                    "args": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onWindowResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\r\nimport { HelperService } from '../../services/helper.service';\r\n\r\n@Component({\r\n  selector: 'lib-header-text',\r\n  templateUrl: './header-text.component.html',\r\n  styleUrls: ['./header-text.component.scss']\r\n})\r\nexport class HeaderTextComponent implements OnInit {\r\n  @Input() label: string = 'label';\r\n  @Input() light: boolean = false;\r\n  @Input() thin: boolean = false;\r\n  @Input() info: string = '';\r\n  @Input() convertMobile: boolean = false;\r\n  @Input() size: string = '38px';\r\n  mobileSize: string = '25px';\r\n  mobileLineHeight: string = '34px';\r\n\r\n  @Output() public infoValue:EventEmitter<any> = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    public screen: HelperService\r\n  ) {}\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n    onWindowResize() {\r\n      this.screen.updateScreenSizes();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.mobileSize = this.screen.convertMobileFont(this.size, 0.658);\r\n    this.mobileLineHeight = this.screen.convertMobileFont(this.size, 0.9);\r\n  }\r\n\r\n  getInfo(e: string) {\r\n    this.infoValue.emit(e);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\";\r\n\r\n.da-header-text-wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    .da-header-text {\r\n        font-family: $font;\r\n        color: $t1-base-color;\r\n        text-align: center;\r\n        font-weight: 400;\r\n        margin: 0;\r\n    \r\n        &.light {\r\n            color: $t1-secondary-color;\r\n        }\r\n\r\n        &.thin {\r\n            font-weight: 300;\r\n        }\r\n    }\r\n\r\n    .da-header-info-button {\r\n        margin-left: 10px;\r\n    }\r\n}\r\n",
                    "styleUrl": "./header-text.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"da-header-text-wrapper\">\r\n    <h3 class=\"da-header-text\" \r\n        [ngClass]=\"{'light' : light, 'thin': thin}\" \r\n        [ngStyle]=\"screen.isSmallest() && convertMobile ? {'font-size': mobileSize, 'line-height': mobileLineHeight} : {'font-size': size}\"\r\n    >\r\n        {{label}}\r\n</h3>\r\n    <div class=\"da-header-info-button\" *ngIf=\"info\">\r\n        <lib-info-button \r\n            [light]=\"light\" \r\n            [id]=\"info\" \r\n            (infoPressed)=\"getInfo($event)\"\r\n        ></lib-info-button>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "InfoButtonComponent",
            "id": "component-InfoButtonComponent-252c24c158cbbe76ecbb4d224e0b03938a4f160ff445b720d8ec0f9b0848cfd58fd8fd60de2db92e2908e746982e9923968e67cb6c355ee8a2f1bae80dfea786",
            "file": "projects/fm-library/src/lib/buttons/info-button/info-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-info-button",
            "styleUrls": [
                "./info-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./info-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "infoPressed",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "faCircleInfo",
                    "defaultValue": "faCircleInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "getInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { faCircleInfo } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'lib-info-button',\r\n  templateUrl: './info-button.component.html',\r\n  styleUrls: ['./info-button.component.scss']\r\n})\r\nexport class InfoButtonComponent implements OnInit {\r\n  @Input() light: boolean = false;\r\n  @Input() id: string = '';\r\n  @Output() public infoPressed:EventEmitter<any> = new EventEmitter<boolean>();\r\n  faCircleInfo = faCircleInfo;\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getInfo() {\r\n    this.infoPressed.emit(this.id);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\"; \r\n\r\n.da-info-button {\r\n    color: $t1-base-color;\r\n    min-width: 20px;\r\n    min-height: 20px;\r\n    max-width: 20px;\r\n    max-height: 20px;\r\n    position: relative;\r\n    border-radius: 20px;\r\n    border: none;\r\n    background: transparent;\r\n    cursor: pointer;\r\n    transition: all 0.25s ease-in-out;\r\n\r\n    &.light {\r\n        color: $t4-secondary-color;\r\n        background: transparent;\r\n\r\n        .da-info-icon {\r\n            fill: $t4-secondary-color;\r\n            background-color: transparent;\r\n        }\r\n    }\r\n\r\n    .da-info-icon {\r\n        fill: $t1-base-color;\r\n        font-size: 20px;\r\n        width: 18px;\r\n        height: 18px;\r\n        top: 0;\r\n        left: 0;\r\n        position: absolute;\r\n        border-radius: 20px;\r\n        background-color: #fff;\r\n        box-shadow: 0 3px 5px $shadow-base-color;\r\n\r\n        svg {\r\n            position: relative;\r\n            top: -1px;\r\n            left: -1px;\r\n        }\r\n\r\n        &:hover {\r\n            font-size: 22px;\r\n            width: 20px;\r\n            height: 20px;\r\n            top: -1px;\r\n            left: -1px;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./info-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"da-info-button\" [ngClass]=\"{'light' : light}\" (click)=\"getInfo()\">\r\n    <svg-icon \r\n            class=\"da-info-icon\" \r\n            src=\"assets/images/circleInfo.svg\"\r\n        >\r\n        </svg-icon>\r\n    </div>\r\n"
        },
        {
            "name": "InputButtonComponent",
            "id": "component-InputButtonComponent-12fd616a46c7d6c36932389456703e48a1c599e7d71df485a8bc0887cf685c33c338481b6dea7f91dbd31617d34a21833506985bf03160a540628f0629924a5e",
            "file": "projects/fm-library/src/lib/inputs/input-button/input-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-input-button",
            "styleUrls": [
                "./input-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoWidth",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'assets/images/pen.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "info",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoHeader",
                    "defaultValue": "'info header'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoText",
                    "defaultValue": "'info text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "short",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "touched",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'nebenkosten'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "unit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "infoValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "inputValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getInfo",
                    "args": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-input-button',\r\n  templateUrl: './input-button.component.html',\r\n  styleUrls: ['./input-button.component.scss']\r\n})\r\nexport class InputButtonComponent implements OnInit {\r\n\r\n  @Input() label: string = 'label';\r\n  @Input() name: string = 'name';\r\n  @Input() type: string = 'nebenkosten';\r\n  @Input() value!: string;\r\n  @Input() icon: string = 'assets/images/pen.svg';\r\n  @Input() touched: boolean = false;\r\n  @Input() short: boolean = false;\r\n  @Input() unit!: string;\r\n  @Input() info: string = '';\r\n  @Input() inputDisabled: boolean = false;\r\n  @Input() autoWidth: boolean = false;\r\n  @Input() infoText: string = 'info text';\r\n  @Input() infoHeader: string = 'info header';\r\n  @Input() light: boolean = false;\r\n\r\n  @Output() public inputValue:EventEmitter<any> = new EventEmitter<string>();\r\n  @Output() public infoValue:EventEmitter<any> = new EventEmitter<string>();\r\n  \r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    if(this.unit && this.value) {\r\n      this.value = this.value + ' ' + this.unit;\r\n    }\r\n  }\r\n\r\n  getValue() {\r\n    this.inputValue.emit(this.type);\r\n  }\r\n\r\n  getInfo(e: string) {\r\n    this.infoValue.emit(e);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\"; \r\n\r\n.da-input-button-single {\r\n    font-family: $font;\r\n\r\n    .da-input-button-label {\r\n        font-size: $t4-base-size;\r\n        margin-bottom: 3px;\r\n        margin-left: 21px;\r\n        text-align: left;\r\n        color: $t4-base-color;\r\n\r\n        &.light {\r\n            color: $t4-secondary-color;\r\n        }\r\n    }\r\n\r\n    .da-input {\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        button {\r\n            width: 200px;\r\n            min-height: 43px;\r\n            border-radius: 24px;\r\n            background-color: #fff;\r\n            border: 0px solid transparent;\r\n            border-bottom: 1px solid $button-base-color;\r\n            box-shadow: 0 3px 5px $shadow-base-color;\r\n            text-align: left;\r\n            display: flex;\r\n            align-items: flex-start;\r\n            justify-content: space-between;\r\n            padding: 8px;\r\n            font-size: $t1-base-size;\r\n            color: $t1-base-color;\r\n            font-family: $font;\r\n\r\n            &:hover,\r\n            &:focus,\r\n            &:focus-visible {\r\n                // border: 2px solid $button-base-color;\r\n                outline: none;\r\n            }\r\n\r\n            &.light {\r\n                box-shadow: 0 3px 5px $shadow-secondary-color;\r\n\r\n                &:hover,\r\n                &:focus {\r\n                    // border: 2px solid $button-secondary-color;\r\n                    outline: none;\r\n                }\r\n            }\r\n\r\n            &.short {\r\n                width: 120px;\r\n            }\r\n\r\n            &.disabled {\r\n                cursor: default;\r\n                background-color: $header-base-color;\r\n                color: $t1-base-color; \r\n            }\r\n\r\n            .da-input-button-icons {\r\n                height: 23px;\r\n                width: 23px;\r\n                font-size: 24px;\r\n                position: absolute;\r\n                left: 10px;\r\n                top: 9px;\r\n                border-radius: 25px;\r\n                box-shadow: 0 3px 5px $shadow-base-color;\r\n                background: #fff;\r\n    \r\n                .da-input-button-icon-yellow {\r\n                    color: $attention-color;\r\n                    fill: $attention-color;\r\n                }\r\n    \r\n                .da-input-button-icon-green {\r\n                    color: $success-color;\r\n                    fill: $success-color;\r\n                }\r\n\r\n            }\r\n\r\n            .da-input-button-icon-click {\r\n                fill: $button-base-color;\r\n                font-size: 16px;\r\n                margin: 5px 5px 0 0;\r\n                position: absolute;\r\n                right: 5px;\r\n                transition: all 0.4s ease-in-out 0s, visibility 0s;\r\n                cursor: pointer;\r\n\r\n                &:hover {\r\n                    font-size: 20px;\r\n                    margin: 3px 5px 0 0;\r\n                }\r\n\r\n                &.with-info {\r\n                    right: 35px;\r\n                }\r\n            }\r\n\r\n            .da-input-button-value {\r\n                width: auto;\r\n                margin: 3px 25px 0 35px;\r\n                display: block;\r\n            }\r\n        }\r\n\r\n        .da-input-button-info-button {\r\n            margin-left: 10px;\r\n        }\r\n    }\r\n}\r\n\r\n",
                    "styleUrl": "./input-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"da-input-button-single\">\r\n    <div class=\"da-input-button-label\" [ngClass]=\"{'light' : light}\">{{label}}</div>\r\n    <label class=\"da-input\">\r\n        <button \r\n            autocomplete=\"off\"\r\n            [id]=\"name\"\r\n            (click)=\"getValue()\" \r\n            [name]=\"name\"\r\n            [ngClass]=\"{'light' : light, 'short' : short, 'disabled' : inputDisabled}\"\r\n            #target>\r\n            <div class=\"da-input-button-icons\" *ngIf=\"touched\">\r\n                <svg-icon \r\n                    class=\"da-input-button-icon-green\" \r\n                    src=\"assets/images/circleCheck.svg\" \r\n                ></svg-icon>\r\n            </div>\r\n            <div class=\"da-input-button-icons\" *ngIf=\"!touched\">\r\n                <svg-icon \r\n                    class=\"da-input-button-icon-yellow\" \r\n                    src=\"assets/images/circleExclamation.svg\" \r\n                ></svg-icon>\r\n            </div>\r\n            <span class=\"da-input-button-value\" [innerHTML]=\"value\"></span>\r\n            <svg-icon \r\n                *ngIf=\"!inputDisabled\"\r\n                [ngClass]=\"{'with-info' : info}\"\r\n                class=\"da-input-button-icon-click\" \r\n                [src]=\"icon\" \r\n            ></svg-icon>\r\n        </button>\r\n        <div class=\"da-input-button-info-button\" *ngIf=\"info\">\r\n            <lib-info-button \r\n            [light]=\"light\" \r\n            (infoPressed)=\"getInfo($event)\"\r\n            [id]=\"info\"\r\n            ></lib-info-button>\r\n        </div>\r\n    </label>\r\n</div>\r\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-f8f93164126220db095ee61cf51ffd18976a851539eec5b28a9206f386e982ecf8849b6f91ff703953e94d3ab125e8685b8b979f79e0e310dda82bedda6202e0",
            "file": "projects/fm-library/src/lib/inputs/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoWidth",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "customBackground",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | boolean",
                    "decorators": []
                },
                {
                    "name": "customBorder",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string | boolean",
                    "decorators": []
                },
                {
                    "name": "customBoxShadow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | boolean",
                    "decorators": []
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "info",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoHeader",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isCurrency",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "skinnyLabel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "textAlign",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "touched",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "unit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "validationType",
                    "defaultValue": "'currency'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "infoValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "inputValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "defaultBackground",
                    "defaultValue": "'rgb(255, 255, 255)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "defaultBorder",
                    "defaultValue": "'1px solid rgb(32, 56, 100)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "defaultBoxShadow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "getInfo",
                    "args": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removePlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "textAlignIsCenter",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "textAlignIsLeft",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.scss']\r\n})\r\nexport class InputComponent implements OnInit {\r\n  @Input() form: any;\r\n  @Input() label: string = '';\r\n  @Input() name: string = '';\r\n  @Input() placeholder: string = '';\r\n  @Input() value: string = '';\r\n  @Input() touched: boolean = false;\r\n  @Input() type: string = 'text';\r\n  @Input() validationType: string = 'currency';\r\n  @Input() unit!: string;\r\n  @Input() info: string = '';\r\n  @Input() infoText: string = '';\r\n  @Input() infoHeader: string = '';\r\n  @Input() error: boolean = false;\r\n  @Input() errorText: string = '';\r\n  @Input() autoWidth: boolean = false;\r\n  @Input() isCurrency: boolean = true;\r\n  @Input() inputDisabled: boolean = false;\r\n  @Input() light: boolean = false;\r\n  @Input() skinnyLabel: boolean = false;\r\n  @Input() textAlign: string = 'right';\r\n  defaultBackground: string = 'rgb(255, 255, 255)';\r\n  @Input() customBackground: string | boolean = false;\r\n  defaultBorder: string = '1px solid rgb(32, 56, 100)';\r\n  @Input() customBorder: string | boolean = false;\r\n  defaultBoxShadow!: string;\r\n  @Input() customBoxShadow: string | boolean = false;\r\n\r\n  @Output() public inputValue:EventEmitter<any> = new EventEmitter<string>();\r\n  @Output() public infoValue:EventEmitter<any> = new EventEmitter<string>();\r\n  \r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.light\r\n      ? this.defaultBoxShadow = '0 3px 5px rgba(32, 56, 100, 0.5)'\r\n      : this.defaultBoxShadow = '0 3px 5px rgba(255, 255, 255, 0.5)';\r\n  }\r\n\r\n  getValue(e: any) {\r\n    if (this.isCurrency) {\r\n      const inputValue = e.srcElement.value.replaceAll('.', '').replaceAll(',', '.');\r\n      if(isNaN(parseInt(inputValue))) {\r\n        return;\r\n      }\r\n      this.value = parseInt(inputValue).toLocaleString('de-DE', { maximumFractionDigits: 2, minimumFractionDigits: 0 });\r\n    }\r\n    this.inputValue.emit([e.srcElement.value, this.name]);\r\n  }\r\n\r\n  removePlaceholder() {\r\n    this.placeholder = '';\r\n  }\r\n\r\n  getInfo(e: string) {\r\n    this.infoValue.emit(e);\r\n  }\r\n\r\n  textAlignIsLeft() {\r\n    return this.textAlign === 'left' ? true : false;\r\n  }\r\n\r\n  textAlignIsCenter() {\r\n    return this.textAlign === 'center' ? true : false;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\"; \r\n\r\n.da-input-single {\r\n    font-family: $font;\r\n\r\n    .da-input-label {\r\n        font-size: $t4-base-size;\r\n        margin-bottom: 3px;\r\n        text-align: left;\r\n        margin-left: 21px;\r\n        color: $t4-base-color;\r\n\r\n        &.light {\r\n            color: $t4-secondary-color;\r\n        }\r\n\r\n        &.skinny {\r\n            font-weight: 100;\r\n        }\r\n    }\r\n\r\n    .da-input {\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n        margin-right: -21px;\r\n        \r\n        .da-input-icons {\r\n            min-width: 23px;\r\n            min-height: 23px;\r\n            max-width: 23px;\r\n            max-height: 23px;\r\n            position: absolute;\r\n            left: 10px;\r\n            top: 9px;\r\n            border-radius: 23px;\r\n            border: none;\r\n            background: transparent;\r\n\r\n            .da-input-icon {\r\n\r\n                font-size: 25px;\r\n                width: 23px;\r\n                height: 23px;\r\n                top: 0;\r\n                left: 0;\r\n                position: absolute;\r\n                border-radius: 25px;\r\n                background-color: #fff;\r\n                box-shadow: 0 3px 5px $shadow-base-color;\r\n\r\n                &.green {\r\n                    fill: $success-color;\r\n                }\r\n\r\n                &.red {\r\n                    fill: $warning-base-color;\r\n                }\r\n\r\n                svg {\r\n                    position: relative;\r\n                    top: -1px;\r\n                    left: -1px;\r\n                }\r\n            }\r\n    \r\n        }\r\n\r\n        input {\r\n            width: 160px;\r\n            height: 26px;\r\n            border-radius: 24px;\r\n            border: 0px solid transparent;\r\n            // border-bottom: 1px solid $button-base-color;\r\n            // box-shadow: 0 3px 5px $shadow-base-color;\r\n            text-align: right;\r\n            padding: 8px 20px;\r\n            font-size: $t1-base-size;\r\n            color: $t1-base-color;\r\n            font-family: $font;\r\n\r\n            &:hover,\r\n            &:focus,\r\n            &:focus-visible {\r\n                // border: 2px solid $button-base-color;\r\n                outline: none;\r\n            }\r\n\r\n            &::placeholder {\r\n                color: $t5-base-color;\r\n                text-align: right;\r\n            }\r\n\r\n            &.withUnit {\r\n                padding-right: 30px;\r\n                width: 142px;\r\n            }\r\n\r\n            &.auto-width {\r\n                width: 100%;\r\n\r\n            }\r\n\r\n            &.light {\r\n                // box-shadow: 0 3px 5px $shadow-secondary-color;\r\n\r\n                &:hover,\r\n                &:focus {\r\n                    // border: 2px solid $button-secondary-color;\r\n                    outline: none;\r\n                }\r\n            }\r\n\r\n            &.error {\r\n                background-color: $error-background;\r\n                border-bottom: 1px solid $warning-base-color;\r\n                color: $warning-base-color;\r\n\r\n                &::placeholder {\r\n                    color: $warning-base-color;\r\n                }\r\n            }\r\n\r\n            &.disabled {\r\n                background-color: $header-base-color;\r\n                color: $t1-base-color;\r\n                opacity: 0.5;\r\n            }\r\n\r\n            &.text-align-left {\r\n                text-align: left;\r\n                &::placeholder {\r\n                    text-align: left;\r\n                }\r\n            }\r\n\r\n            &.text-align-center {\r\n                text-align: center;\r\n                &::placeholder {\r\n                    text-align: center;\r\n                }\r\n            }\r\n        }\r\n\r\n        .da-input-unit {\r\n            position: relative;\r\n            color: $t1-base-color;\r\n            right: 27px;\r\n            width: 25px;\r\n            // display: flex;\r\n            // justify-content: flex-end;\r\n            pointer-events: none;\r\n\r\n            // .da-input-unit-wrapper {\r\n            //     max-width: 25px;\r\n            //     margin-right: 10px;\r\n            //     overflow: hidden;\r\n            // }\r\n        }\r\n\r\n        .da-input-info-button {\r\n            margin-left: -10px;\r\n        }\r\n\r\n    }\r\n    .da-input-error {\r\n            background-color: $button-base-color;\r\n            font-size: $t1-base-size;\r\n            color: $t1-secondary-color;\r\n            max-width: 185px;\r\n            position: absolute;\r\n            border-radius: 10px;\r\n            padding: 10px;\r\n            display: flex;\r\n            z-index: 1;\r\n            margin-top: 15px;\r\n            justify-content: center;\r\n            align-items: center;\r\n\r\n            &.light {\r\n                color: $t1-base-color;\r\n                background-color: $button-secondary-color;\r\n                box-shadow: 0 3px 5px $shadow-base-color;\r\n            }\r\n\r\n        .da-tooltip-arrow {\r\n            width: 20px;\r\n            height: 20px;\r\n            position: absolute;\r\n            top: -20px;\r\n            left: 20px;\r\n\r\n            .da-arrow-up {\r\n                width: 0; \r\n                height: 0; \r\n                border-left: 20px solid transparent;\r\n                border-right: 20px solid transparent;\r\n                border-bottom: 20px solid $button-base-color;\r\n\r\n                &.light {\r\n                    border-bottom: 20px solid $button-secondary-color;\r\n                }\r\n              }\r\n        }\r\n\r\n        .da-input-error-icon-wrapper {\r\n            background: transparent;\r\n            border-radius: 20px;\r\n            position: relative;\r\n            margin-right: 20px;\r\n            box-shadow: 0 3px 5px $shadow-base-color;\r\n            width: 20px;\r\n            height: 20px;\r\n\r\n            .da-input-error-icon {\r\n                fill: $t1-secondary-color;\r\n                font-size: 20px;\r\n            }\r\n\r\n            &.light {\r\n                background: #fff;\r\n\r\n                .da-input-error-icon {\r\n                    fill: $t1-base-color;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 37
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"da-input-single\">\r\n    <div class=\"da-input-label\" [ngClass]=\"{'light' : light, 'skinny': skinnyLabel}\">{{label}}</div>\r\n    <!-- Form Input -->\r\n    <label *ngIf=\"form\" class=\"da-input\" [formGroup]=\"form\">\r\n        <div class=\"da-input-icons\" *ngIf=\"touched\">\r\n            <svg-icon \r\n                *ngIf=\"!error\" \r\n                class=\"da-input-icon green\" \r\n                src=\"assets/images/circleCheck.svg\"\r\n            ></svg-icon>\r\n            <svg-icon \r\n                *ngIf=\"error\" \r\n                class=\"da-input-icon red\" \r\n                src=\"assets/images/circleXmark.svg\"\r\n            ></svg-icon>\r\n        </div>\r\n        <input \r\n            autocomplete=\"off\"\r\n            [type]=\"type\" \r\n            (keyup)=\"getValue($event)\" \r\n            [placeholder]=\"placeholder\"\r\n            [formControlName]=\"name\"\r\n            [value]=\"value\"\r\n            [disabled]=\"inputDisabled\"\r\n            (click)=\"removePlaceholder()\"\r\n            [ngClass]=\"{'light' : light,\r\n                        'error' : error,\r\n                        'auto-width' : autoWidth,\r\n                        'withUnit': unit,\r\n                        'disabled': inputDisabled,\r\n                        'text-align-left': textAlignIsLeft(),\r\n                        'text-align-center': textAlignIsCenter()}\"\r\n            [ngStyle]=\"{'background-color': !!customBackground ? customBackground : defaultBackground,\r\n                        'border-bottom': !!customBorder ? '1px solid ' + customBorder : defaultBorder,\r\n                        'box-shadow': !!customBoxShadow ? '0 3px 5px ' + customBoxShadow : defaultBoxShadow}\"\r\n            #target\r\n        >\r\n        <div class=\"da-input-unit\">\r\n            <div class=\"da-input-unit-wrapper\">\r\n                {{unit}}\r\n            </div>\r\n        </div>\r\n        <div class=\"da-input-info-button\" *ngIf=\"info\">\r\n            <lib-info-button \r\n            [light]=\"light\" \r\n            (infoPressed)=\"getInfo($event)\"\r\n            [id]=\"info\"\r\n            ></lib-info-button>\r\n        </div>\r\n    </label>\r\n    <!-- No Form Input -->\r\n    <label *ngIf=\"!form\" class=\"da-input\">\r\n        <div class=\"da-input-icons\" *ngIf=\"touched\">\r\n            <svg-icon \r\n                *ngIf=\"!error\" \r\n                class=\"da-input-icon green\" \r\n                src=\"assets/images/circleCheck.svg\"\r\n            ></svg-icon>\r\n            <svg-icon \r\n                *ngIf=\"error\" \r\n                class=\"da-input-icon red\" \r\n                src=\"assets/images/circleXmark.svg\"\r\n            ></svg-icon>\r\n        </div>\r\n        <input \r\n            autocomplete=\"off\"\r\n            [type]=\"type\" \r\n            (keyup)=\"getValue($event)\" \r\n            [placeholder]=\"placeholder\"\r\n            [name]=\"name\"\r\n            [disabled]=\"inputDisabled\"\r\n            [value]=\"value\"\r\n            (click)=\"removePlaceholder()\"\r\n            [ngClass]=\"{'light' : light,\r\n                        'error' : error,\r\n                        'auto-width' : autoWidth,\r\n                        'withUnit': unit,\r\n                        'disabled': inputDisabled,\r\n                        'text-align-left': textAlignIsLeft(),\r\n                        'text-align-center': textAlignIsCenter()}\"\r\n            [ngStyle]=\"{'background-color': customBackground ? customBackground : defaultBackground,\r\n                        'border-bottom': customBorder ? '1px solid ' + customBorder : defaultBorder,\r\n                        'box-shadow': customBoxShadow ? '0 3px 5px ' + customBoxShadow : defaultBoxShadow}\"\r\n            #target\r\n        >\r\n        <div class=\"da-input-unit\">\r\n            <div class=\"da-input-unit-wrapper\">\r\n                {{unit}}\r\n            </div>\r\n        </div>\r\n        <div class=\"da-input-info-button\" *ngIf=\"info\">\r\n            <lib-info-button \r\n            [light]=\"light\" \r\n            (infoPressed)=\"getInfo($event)\"\r\n            [id]=\"info\"\r\n            ></lib-info-button>\r\n        </div>\r\n    </label>\r\n    <div class=\"da-input-error\" *ngIf=\"error\" [ngClass]=\"{'light' : light}\">\r\n        <div class=\"da-tooltip-arrow\">\r\n            <div class=\"da-arrow-up\" [ngClass]=\"{'light' : light}\"></div>\r\n        </div>\r\n        <div class=\"da-input-error-icon-wrapper\" [ngClass]=\"{'light' : light}\">\r\n            <svg-icon class=\"da-input-error-icon\" src=\"assets/images/circleExclamation.svg\"></svg-icon>\r\n        </div>\r\n        <span>{{errorText}}</span>\r\n    </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "InputDateComponent",
            "id": "component-InputDateComponent-3a2d49c628c0a7d36cd878c5da3adaf9f6b9a900fac59090311739c539693bbf4975e2d4718ded75df8bea1b47674cdb1bfed8586d6bd059a5605e3a344acaf0",
            "file": "projects/fm-library/src/lib/inputs/input-date/input-date.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-input-date",
            "styleUrls": [
                "./input-date.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-date.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "info",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "maxDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Date",
                    "decorators": []
                },
                {
                    "name": "minDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Date",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "touched",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Date",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "dateValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "infoValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "success",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "getInfo",
                    "args": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport 'moment/locale/de';\r\n\r\n@Component({\r\n  selector: 'lib-input-date',\r\n  templateUrl: './input-date.component.html',\r\n  styleUrls: ['./input-date.component.scss']\r\n})\r\n\r\nexport class InputDateComponent implements OnInit {\r\n  @Input() name!: string;\r\n  @Input() label!: string;\r\n  @Input() maxDate!: Date;\r\n  @Input() minDate!: Date;\r\n  @Input() value!: Date;\r\n  @Input() touched: boolean = false;\r\n  @Input() error: boolean = false;\r\n  @Input() errorText: string = '';\r\n  @Input() placeholder!: string;\r\n  @Input() light: boolean = false;\r\n  @Input() info: string = '';\r\n  @Output() public dateValue:EventEmitter<any> = new EventEmitter<string>();\r\n  @Output() public infoValue:EventEmitter<any> = new EventEmitter<string>();\r\n  success: boolean = false;\r\n\r\n  constructor(\r\n    private _adapter: DateAdapter<any>,\r\n    @Inject(MAT_DATE_LOCALE) private _locale: string,\r\n  ) {\r\n    this._locale = 'de';\r\n    this._adapter.setLocale(this._locale)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getValue(e: any) {\r\n    this.value = e.value;\r\n    this.dateValue.emit(e.value);\r\n  }\r\n\r\n  getInfo(e: string) {\r\n    this.infoValue.emit(e);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\"; \r\n\r\n.mat-form-field {\r\n    margin-top: -8px!important;\r\n    font-family: $font!important;\r\n    text-align: center!important;\r\n}\r\n\r\ninput.mat-input-element {\r\n    background-color: #fff!important;\r\n    border-radius: 24px!important;\r\n    height: 42px;\r\n    min-width: 185px!important;\r\n    width: 185px!important;\r\n    color: $button-base-color!important;\r\n    border: 0px solid transparent!important;\r\n    border-bottom: 1px solid $button-base-color!important;\r\n    box-shadow: 0 3px 5px $shadow-base-color!important;\r\n\r\n    &.light {\r\n        box-shadow: 0 3px 5px $shadow-secondary-color!important;\r\n    }\r\n\r\n    &.error {\r\n        background-color: $error-background!important;\r\n        border-bottom: 1px solid $warning-base-color!important;\r\n        color: $warning-base-color!important;\r\n\r\n        &::placeholder {\r\n            color: $warning-base-color!important;\r\n        }\r\n    }\r\n}\r\n\r\n.mat-datepicker-toggle {\r\n    position: absolute;\r\n    right: -4px;\r\n\r\n    button {\r\n        background-color: transparent!important;\r\n        color: $button-base-color!important;\r\n    }\r\n}\r\n\r\n.da-input-date-icons {\r\n    height: 23px;\r\n    width: 23px;\r\n    font-size: 24px;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 14px;\r\n    z-index: 2;\r\n    border-radius: 25px;\r\n    background: #fff;\r\n\r\n    .da-input-date-icon {\r\n\r\n        font-size: 25px;\r\n        width: 23px;\r\n        height: 23px;\r\n        top: 0;\r\n        left: 0;\r\n        position: absolute;\r\n        border-radius: 25px;\r\n        background-color: #fff;\r\n        box-shadow: 0 3px 5px $shadow-base-color;\r\n\r\n        &.green {\r\n            fill: $success-color;\r\n        }\r\n\r\n        &.red {\r\n            fill: $warning-base-color;\r\n        }\r\n\r\n        svg {\r\n            position: relative;\r\n            top: -1px;\r\n            left: -1px;\r\n        }\r\n    }\r\n}\r\n\r\n.da-input-date-single {\r\n    font-family: $font; \r\n\r\n    .da-input-date-label {\r\n        font-size: $t4-base-size;\r\n        margin-bottom: -4px;\r\n        margin-left: -55px;\r\n        color: $t4-base-color;\r\n    \r\n        &.light {\r\n            color: $t4-secondary-color;\r\n        }\r\n    }\r\n\r\n    .da-input-date {\r\n        display: flex;\r\n        align-items: start;\r\n        position: relative;\r\n\r\n        .da-input-info-button {\r\n            margin-top: 12px;\r\n        }\r\n    }\r\n    .da-input-date-error {\r\n        background-color: $button-base-color;\r\n        font-size: $t1-base-size;\r\n        color: $t1-secondary-color;\r\n        max-width: 185px;\r\n        position: absolute;\r\n        border-radius: 10px;\r\n        padding: 10px;\r\n        display: flex;\r\n        z-index: 1;\r\n        margin-top: -18px;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        &.light {\r\n            color: $t1-base-color;\r\n            background-color: $button-secondary-color;\r\n            box-shadow: 0 3px 5px $shadow-base-color;\r\n        }\r\n\r\n    .da-tooltip-arrow {\r\n        width: 20px;\r\n        height: 20px;\r\n        position: absolute;\r\n        top: -20px;\r\n        left: 20px;\r\n\r\n        .da-arrow-up {\r\n            width: 0; \r\n            height: 0; \r\n            border-left: 20px solid transparent;\r\n            border-right: 20px solid transparent;\r\n            border-bottom: 20px solid $button-base-color;\r\n\r\n            &.light {\r\n                border-bottom: 20px solid $button-secondary-color;\r\n            }\r\n          }\r\n    }\r\n\r\n    .da-input-date-error-icon-wrapper {\r\n        background: transparent;\r\n        border-radius: 20px;\r\n        position: relative;\r\n        margin-right: 20px;\r\n        box-shadow: 0 3px 5px $shadow-base-color;\r\n        width: 20px;\r\n        height: 20px;\r\n\r\n        .da-input-date-error-icon {\r\n            fill: $t1-secondary-color;\r\n            font-size: 20px;\r\n        }\r\n\r\n        &.light {\r\n            background: #fff;\r\n\r\n            .da-input-date-error-icon {\r\n                fill: $t1-base-color;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./input-date.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_adapter",
                        "type": "DateAdapter<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_locale",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "_adapter",
                        "type": "DateAdapter<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_locale",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"da-input-date-single\">\r\n    <div class=\"da-input-date-label\" [ngClass]=\"{'light' : light}\">{{label}}</div>\r\n    <label class=\"da-input-date\">\r\n      <div class=\"da-input-date-icons\" *ngIf=\"touched\">\r\n        <svg-icon \r\n            *ngIf=\"!error\" \r\n            class=\"da-input-date-icon green\" \r\n            src=\"assets/images/circleCheck.svg\"\r\n        ></svg-icon>\r\n        <svg-icon \r\n            *ngIf=\"error\" \r\n            class=\"da-input-date-icon red\" \r\n            src=\"assets/images/circleXmark.svg\"\r\n        ></svg-icon>\r\n    </div>\r\n      <mat-form-field appearance=\"fill\" color=\"accent\">\r\n        <!-- <mat-label>{{label}}</mat-label> -->\r\n        <input \r\n            matInput \r\n            [matDatepicker]=\"picker\" \r\n            [max]=\"maxDate\"\r\n            [min]=\"minDate\"\r\n            [value]=\"value\"\r\n            (dateChange)=\"getValue($event)\" \r\n            [placeholder]=\"placeholder\"\r\n            [ngClass]=\"{'light' : light, 'error' : error}\"\r\n        >\r\n        <mat-hint></mat-hint>\r\n        <mat-datepicker-toggle matIconSuffix [for]=\"picker\">\r\n            <svg-icon src=\"assets/images/circleCheck.svg\" class=\"da-input-date-success-icon\"></svg-icon>\r\n        </mat-datepicker-toggle>\r\n        <mat-datepicker #picker color=\"primary\"></mat-datepicker>\r\n      </mat-form-field>\r\n      <div class=\"da-input-info-button\" *ngIf=\"info\">\r\n          <lib-info-button \r\n            [light]=\"light\" \r\n            [id]=\"info\"\r\n            (infoPressed)=\"getInfo($event)\"\r\n          ></lib-info-button>\r\n      </div>\r\n    </label>\r\n    <div class=\"da-input-date-error\" *ngIf=\"error\" [ngClass]=\"{'light' : light}\">\r\n      <div class=\"da-tooltip-arrow\">\r\n          <div class=\"da-arrow-up\" [ngClass]=\"{'light' : light}\"></div>\r\n      </div>\r\n      <div class=\"da-input-date-error-icon-wrapper\" [ngClass]=\"{'light' : light}\">\r\n          <svg-icon class=\"da-input-date-error-icon\" src=\"assets/images/circleExclamation.svg\"></svg-icon>\r\n      </div>\r\n      <span>{{errorText}}</span>\r\n  </div>\r\n  </div>"
        },
        {
            "name": "ProgressButtonComponent",
            "id": "component-ProgressButtonComponent-320ef5def2fae49d038ede995d645810c49dcee41b429f12c18763b9a7063a4c5bee5f450a38a26cc095e2cf9d3b36d28bd2375d4e344e1134aea52901545a29",
            "file": "projects/fm-library/src/lib/buttons/progress-button/progress-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-progress-button",
            "styleUrls": [
                "./progress-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./progress-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "screen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HelperService",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stateIcon",
                    "defaultValue": "'assets/images/lock.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "stateLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "getValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onWindowResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ]
                },
                {
                    "name": "setStateLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\r\nimport { HelperService } from '../../services/helper.service';\r\n\r\n@Component({\r\n  selector: 'lib-progress-button',\r\n  templateUrl: './progress-button.component.html',\r\n  styleUrls: ['./progress-button.component.scss']\r\n})\r\n\r\nexport class ProgressButtonComponent implements OnInit{\r\n  @Input() type!: string;\r\n  @Input() label!: string;\r\n  @Input() icon!: string;\r\n  @Input() state!: string;\r\n  @Input() disabled: boolean = false;\r\n  @Output() public buttonValue:EventEmitter<any> = new EventEmitter<string>();\r\n  stateIcon: string = 'assets/images/lock.svg';\r\n  stateLabel!: string;\r\n\r\n  constructor(\r\n    public screen: HelperService\r\n  ) {}\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n    onWindowResize() {\r\n      this.screen.updateScreenSizes();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.state) {\r\n      if(this.state === 'open') {\r\n        this.stateIcon = 'assets/images/lockOpen.svg';\r\n      }\r\n      this.setStateLabel();\r\n    }\r\n  }\r\n\r\n  getValue() {\r\n    this.buttonValue.emit(this.type);\r\n  }\r\n\r\n  setStateLabel() {\r\n    switch(this.state) {\r\n      case 'success': this.stateLabel = 'vollständig';\r\n      break;\r\n      case 'warning': this.stateLabel = 'unvollständig';\r\n      break;\r\n      case 'error': this.stateLabel = 'fehlerhaft';\r\n      break;\r\n      case 'open': this.stateLabel = 'freigeschaltet';\r\n      break;\r\n      case 'closed': this.stateLabel = 'noch nicht freigeschaltet';\r\n      break;\r\n      case 'info': this.stateLabel = 'Zwischenstand erreicht';\r\n      break;\r\n      case 'end': this.stateLabel = 'Angebot nicht möglich';\r\n      break;\r\n      default: this.stateLabel = 'optional';\r\n      break;\r\n    }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\";\r\n\r\n.da-progress-button-single {\r\n    font-family: $font;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    button {\r\n        border: none;\r\n        min-height: 22px;\r\n        min-width: 22px;\r\n        color: $button-base-color;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        font-size: 12px;\r\n        font-weight: 300;\r\n        font-family: $font;\r\n        transition: all 0.4s ease-in-out 0s, visibility 0s;\r\n        background: transparent;\r\n        cursor: pointer;\r\n\r\n        &.disabled {\r\n            cursor: default;\r\n            pointer-events: none;\r\n\r\n            .da-progress-button-icon {\r\n                opacity: 0.2;\r\n            }\r\n\r\n            .da-progress-button-state-circle {\r\n                display: none;\r\n            }\r\n        }\r\n\r\n        .da-progress-button-label {\r\n            width: 100%;\r\n            text-align: center;\r\n            display: block;\r\n            white-space: nowrap;\r\n            transition: all 0.4s ease-in-out 0s, visibility 0s;\r\n        }\r\n        .da-progress-button-state-wrapper {\r\n            position: relative;\r\n            width: 50px;\r\n\r\n            .da-progress-button-state {\r\n                position: absolute;\r\n                right: 8px;\r\n                bottom: 0;\r\n\r\n                .da-progress-button-state-icon {\r\n                    font-size: 12px;\r\n                    fill: $button-base-color;\r\n                }\r\n\r\n                .da-progress-button-state-circle {\r\n                    width: 14px;\r\n                    height: 14px;\r\n                    border-radius: 14px;\r\n                    margin-left: -10px;\r\n                    background-color: $tab-background;\r\n                    box-shadow: 0 3px 5px $shadow-base-color;\r\n                    transition: all 0.4s ease-in-out 0s, visibility 0s;\r\n\r\n                    &.green {\r\n                        background-color: $success-color;\r\n                    }\r\n                    &.yellow {\r\n                        background-color: $attention-color;\r\n                    }\r\n                    &.red {\r\n                        background-color: $warning-base-color;\r\n                    }\r\n                }\r\n            }\r\n            .da-progress-button-icon {\r\n                font-size: 21px;\r\n                display: inline-block;\r\n                width: 25px;\r\n                color: $button-base-color;\r\n                fill: $button-base-color;\r\n                transition: all 0.4s ease-in-out 0s, visibility 0s;\r\n\r\n                &.green {\r\n                    color: $success-color;\r\n                    fill: $success-color;\r\n                }\r\n\r\n                &.red {\r\n                    color: $warning-base-color;\r\n                    fill: $warning-base-color;\r\n                }\r\n            }\r\n        }\r\n        &:hover {\r\n            .da-progress-button-state-wrapper .da-progress-button-icon {\r\n                font-size: 24px;\r\n                width: 30px;\r\n            }\r\n\r\n            .da-progress-button-label {\r\n                font-size: 14px;\r\n            }\r\n\r\n            .da-progress-button-state-wrapper .da-progress-button-state .da-progress-button-state-circle {\r\n                width: 16px;\r\n                height: 16px;\r\n            }\r\n\r\n            +.da-progress-button-state-label {\r\n                visibility: visible;\r\n            }\r\n        }\r\n    }\r\n    .da-progress-button-state-label {\r\n        visibility: hidden;\r\n        color: $t1-secondary-color;\r\n        background-color: $button-base-color;\r\n        border-radius: 10px;\r\n        white-space: nowrap;\r\n        font-size: 12px;\r\n        font-weight: 300;\r\n        padding: 3px 10px;\r\n        text-align: center;\r\n        position: absolute;\r\n        bottom: -25px;\r\n        transition: all 0.4s ease-in-out 0s, visibility 0s;\r\n    }\r\n}\r\n",
                    "styleUrl": "./progress-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"da-progress-button-single\">\r\n    <button \r\n        (click)=\"getValue()\" \r\n        [ngClass]=\"{'disabled' : disabled}\" \r\n        [disabled]=\"disabled\"\r\n        #target\r\n    >\r\n    <div class=\"da-progress-button-state-wrapper\">\r\n        <svg-icon\r\n            class=\"da-progress-button-icon\" \r\n            [ngClass]=\"{'green' : state === 'info', 'red' : state === 'end'}\"\r\n            [src]=\"icon\"\r\n        >\r\n        </svg-icon>\r\n        <div class=\"da-progress-button-state\">\r\n            <svg-icon \r\n                *ngIf=\"state && (state === 'open' || state === 'closed'); else stateCircle\"\r\n                class=\"da-progress-button-state-icon\" \r\n                [src]=\"stateIcon\" \r\n            ></svg-icon>\r\n            <ng-template #stateCircle>\r\n                <div \r\n                    *ngIf=\"state && (state !== 'info' && state !== 'end')\"\r\n                    class=\"da-progress-button-state-circle\"\r\n                    [ngClass]=\"{'green' : state === 'success', 'yellow': state === 'warning', 'red' : state === 'error'}\"\r\n                ></div>\r\n            </ng-template>\r\n        </div>\r\n    </div>\r\n    <div class=\"da-progress-button-label\">\r\n        <span>\r\n            {{ label }}\r\n        </span>\r\n    </div> \r\n    </button>\r\n    <div *ngIf=\"stateLabel\" class=\"da-progress-button-state-label\">\r\n        <span>\r\n            {{ stateLabel }}\r\n        </span>\r\n    </div> \r\n</div>"
        },
        {
            "name": "StateIconComponent",
            "id": "component-StateIconComponent-4cb056e6f32ab83552a3828c403a3aad19a06d9db138ac90d5b364536b79ef9a4d6260f269f7a21b5ae05b482d743adeb3e8ad7090272baf3323b2e53e5976e8",
            "file": "projects/fm-library/src/lib/icons/state-icon/state-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-state-icon",
            "styleUrls": [
                "./state-icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./state-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "state",
                    "defaultValue": "'warning'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-state-icon',\r\n  templateUrl: './state-icon.component.html',\r\n  styleUrls: ['./state-icon.component.scss']\r\n})\r\nexport class StateIconComponent {\r\n  @Input() state: string = 'warning';\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\"; \r\n\r\n.da-state-icon-wrapper {\r\n    margin-left: 15px;\r\n    top: 15px;\r\n    position: absolute;\r\n    background: #fff;\r\n    font-size: 25px;\r\n    width: 23px;\r\n    height: 23px;\r\n    border-radius: 25px;\r\n    box-shadow: 0 3px 5px $shadow-base-color;\r\n\r\n    .da-state-icon {\r\n        position: absolute;\r\n        top: -1px;\r\n        left: -1px;\r\n\r\n        &.green {\r\n            color: $success-color;\r\n            fill: $success-color;\r\n        }\r\n\r\n        &.yellow {\r\n            color: $attention-color;\r\n            fill: $attention-color;\r\n        }\r\n\r\n        &.red {\r\n            color: $warning-base-color;\r\n            fill: $warning-base-color;\r\n        }\r\n        &.gray {\r\n            color: $header-base-color;\r\n            fill: $header-base-color;\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./state-icon.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"da-state-icon-wrapper\">\r\n    <svg-icon class=\"da-state-icon green\" *ngIf=\"state === 'success'\" src=\"assets/images/circleCheck.svg\"></svg-icon>\r\n    <svg-icon class=\"da-state-icon yellow\" *ngIf=\"state === 'warning'\" src=\"assets/images/circleExclamation.svg\"></svg-icon>\r\n    <svg-icon class=\"da-state-icon red\" *ngIf=\"state === 'error'\" src=\"assets/images/circleXmark.svg\"></svg-icon>\r\n    <svg-icon class=\"da-state-icon gray\" *ngIf=\"state === 'optional'\" src=\"assets/images/circleFullQuestion.svg\"></svg-icon>\r\n</div>\r\n"
        },
        {
            "name": "TextAreaComponent",
            "id": "component-TextAreaComponent-2fd23aad427986813398e0ead075017d13a121a31bb2f18cb69309f2b83c70edf04c6fa3febbab7a72b546dba36e80a8442cea44a759bc8d8e954e76667d7b09",
            "file": "projects/fm-library/src/lib/inputs/text-area/text-area.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-text-area",
            "styleUrls": [
                "./text-area.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-area.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoWidth",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "info",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoHeader",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "infoText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multiLine",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "touched",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "infoValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "inputValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getInfo",
                    "args": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removePlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-text-area',\r\n  templateUrl: './text-area.component.html',\r\n  styleUrls: ['./text-area.component.scss']\r\n})\r\nexport class TextAreaComponent implements OnInit {\r\n  @Input() label: string = '';\r\n  @Input() name: string = '';\r\n  @Input() value: any = '';\r\n  @Input() touched: boolean = false;\r\n  @Input() placeholder: string = '';\r\n  @Input() multiLine: boolean = false;\r\n  @Input() info: string = '';\r\n  @Input() infoText: string = '';\r\n  @Input() infoHeader: string = '';\r\n  @Input() error: boolean = false;\r\n  @Input() autoWidth: boolean = false;\r\n  @Input() inputDisabled: boolean = false;\r\n  @Input() light: boolean = false;\r\n  @Output() public inputValue:EventEmitter<any> = new EventEmitter<string>();\r\n  @Output() public infoValue:EventEmitter<any> = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getValue(e: any) {\r\n    this.inputValue.emit([e.srcElement.innerHTML, this.name]);\r\n  }\r\n\r\n  removePlaceholder() {\r\n    this.placeholder = '';\r\n  }\r\n\r\n  getInfo(e: string) {\r\n    this.infoValue.emit(e);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\"; \r\n\r\n.da-text-area-single {\r\n    font-family: $font;\r\n\r\n    .da-text-area-label {\r\n        font-size: $t4-base-size;\r\n        margin-bottom: 3px;\r\n        text-align: left;\r\n        margin-left: 21px;\r\n        color: $t4-base-color;\r\n\r\n        &.light {\r\n            color: $t4-secondary-color;\r\n        }\r\n    }\r\n\r\n    .da-text-area-wrapper {\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n        margin-right: -21px;\r\n\r\n        .da-text-area-icons {\r\n            min-width: 23px;\r\n            min-height: 23px;\r\n            max-width: 23px;\r\n            max-height: 23px;\r\n            position: absolute;\r\n            left: 10px;\r\n            top: 9px;\r\n            border-radius: 23px;\r\n            border: none;\r\n            background: transparent;\r\n\r\n            .da-text-area-icon {\r\n                font-size: 25px;\r\n                width: 23px;\r\n                height: 23px;\r\n                top: 0;\r\n                left: 0;\r\n                position: absolute;\r\n                border-radius: 25px;\r\n                background-color: #fff;\r\n                box-shadow: 0 3px 5px $shadow-base-color;\r\n\r\n                &.green {\r\n                    fill: $success-color;\r\n                }\r\n\r\n                &.red {\r\n                    fill: $warning-base-color;\r\n                }\r\n\r\n                svg {\r\n                    position: relative;\r\n                    top: -1px;\r\n                    left: -1px;\r\n                }\r\n            }\r\n    \r\n        }\r\n        \r\n        .da-text-area {\r\n            width: 140px;\r\n            height: 24px;\r\n            border-radius: 24px;\r\n            background-color: #fff;\r\n            border: 0px solid transparent;\r\n            border-bottom: 1px solid $button-base-color;\r\n            box-shadow: 0 3px 5px $shadow-base-color;\r\n            text-align: left;\r\n            padding: 10px 20px 8px 40px;\r\n            font-size: $t1-base-size;\r\n            color: $t1-base-color;\r\n            font-family: $font;\r\n            cursor: text;\r\n            overflow: hidden;\r\n\r\n            &:hover,\r\n            &:focus,\r\n            &:focus-visible {\r\n                outline: none;\r\n            }\r\n\r\n            &.auto-width {\r\n                width: 100%;\r\n            }\r\n\r\n            &.auto-height {\r\n                min-height: 26px;\r\n                height: auto;\r\n            }\r\n\r\n            &.light {\r\n                box-shadow: 0 3px 5px $shadow-secondary-color;\r\n\r\n                &:hover,\r\n                &:focus {\r\n                    outline: none;\r\n                }\r\n            }\r\n\r\n            &.disabled {\r\n                background-color: $header-base-color;\r\n                color: $t1-base-color-disabled;\r\n                cursor: default;\r\n            }\r\n            &.with-placeholder {\r\n                color: $t5-base-color;\r\n            }\r\n        }\r\n\r\n        .da-text-area-info-button {\r\n            margin-left: 10px;\r\n        }\r\n\r\n    }\r\n}\r\n\r\n",
                    "styleUrl": "./text-area.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"da-text-area-single\">\r\n    <div class=\"da-text-area-label\" [ngClass]=\"{'light' : light}\">{{label}}</div>\r\n    <label class=\"da-text-area-wrapper\">\r\n        <div class=\"da-text-area-icons\" *ngIf=\"touched\">\r\n            <svg-icon \r\n                *ngIf=\"!error\" \r\n                class=\"da-text-area-icon green\" \r\n                src=\"assets/images/circleCheck.svg\"\r\n            ></svg-icon>\r\n            <svg-icon \r\n                *ngIf=\"error\" \r\n                class=\"da-text-area-icon red\" \r\n                src=\"assets/images/circleXmark.svg\"\r\n            ></svg-icon>\r\n        </div>\r\n        <div  contenteditable\r\n            class=\"da-text-area\"\r\n            autocomplete=\"off\"\r\n            [innerHTML]=\"value ? value : placeholder\"\r\n            (keyup)=\"getValue($event)\"\r\n            (click)=\"removePlaceholder()\"\r\n            [ngClass]=\"{'light' : light, \r\n                        'auto-width' : autoWidth,\r\n                        'with-placeholder' : !value && placeholder, \r\n                        'auto-height' : multiLine, \r\n                        'disabled': inputDisabled}\"\r\n            #target\r\n        ></div>\r\n        <div class=\"da-text-area-info-button\" *ngIf=\"info\">\r\n            <lib-info-button \r\n            [light]=\"light\" \r\n            (infoPressed)=\"getInfo($event)\"\r\n            [id]=\"info\"\r\n            ></lib-info-button>\r\n        </div>\r\n    </label>\r\n</div>\r\n\r\n"
        },
        {
            "name": "TileCheckboxComponent",
            "id": "component-TileCheckboxComponent-1dddc1e9686486ff0e3ffc177e6bac18d5a2d81160c0c938246e209607594c642c83b058ed951e4628f39ad55aa4a5b44995684e77390fa527edc994e39ee56a",
            "file": "projects/fm-library/src/lib/tiles/tile-checkbox/tile-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-tile-checkbox",
            "styleUrls": [
                "./tile-checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tile-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "state",
                    "defaultValue": "'state'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "'value'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "checkboxValue",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "screen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HelperService",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "screenWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onWindowResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostListener, Input, Output, TemplateRef } from '@angular/core';\r\nimport { HelperService } from '../../services/helper.service';\r\n\r\n@Component({\r\n  selector: 'lib-tile-checkbox',\r\n  templateUrl: './tile-checkbox.component.html',\r\n  styleUrls: ['./tile-checkbox.component.scss']\r\n})\r\nexport class TileCheckboxComponent {\r\n  @Input() label: string = 'label';\r\n  @Input() name: string = 'name';\r\n  @Input() checked: boolean = false;\r\n  @Input() value: string = 'value';\r\n  @Input() state: string = 'state';\r\n  @Input() image?: string;\r\n  @Input() light: boolean = true;\r\n  @Input() content!: TemplateRef<any>;\r\n  expanded!: boolean;\r\n  screenWidth: any;\r\n  @Output() public checkboxValue:EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(\r\n    public screen: HelperService\r\n  ) {}\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onWindowResize() {\r\n    this.screen.updateScreenSizes();\r\n  }\r\n\r\n  getValue(e: any) {\r\n      this.checked = e.srcElement.checked;\r\n      const checked = e.srcElement.checked;\r\n      const name = e.srcElement.name;\r\n      const value = e.srcElement.value;\r\n      this.checkboxValue.emit({name, value, checked});\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\"; \r\n\r\n.da-tile-checkbox-single {\r\n    font-family: $font;\r\n\r\n    .da-tile-checkbox {\r\n        position: relative;\r\n        display: inline-block;\r\n        border-radius: 25px;\r\n        border: 1px solid transparent;\r\n        width: 242px;\r\n        min-height: 222px;\r\n        background-color: $radiobutton-base-color;\r\n        box-shadow: 0 3px 5px $shadow-base-color;\r\n        transition: all 0.25s ease-in-out;\r\n        padding-bottom: 14px;\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n            border: 1px solid $button-base-color;\r\n        }\r\n\r\n        &.expanded {\r\n            background-color: $button-base-color;\r\n            border: 1px solid $button-base-color;\r\n\r\n        }\r\n\r\n        &.mobile {\r\n            width: calc(100vw - 50px);\r\n            min-height: auto;\r\n            padding-bottom: 0;\r\n\r\n        }\r\n     \r\n        .da-tile-checkbox-icon-wrapper {\r\n                margin-left: 15px;\r\n                top: 15px;\r\n                position: absolute;\r\n                font-size: 25px;\r\n                background: #fff;\r\n                width: 23px;\r\n                height: 23px;\r\n                border-radius: 25px;\r\n                box-shadow: 0 3px 5px $shadow-base-color;\r\n                display: none;\r\n\r\n                &.checked {\r\n                    display: block;\r\n                }\r\n\r\n            .da-tile-checkbox-icon {\r\n                position: absolute;\r\n                top: -1px;\r\n                left: -1px;\r\n\r\n                &.green {\r\n                    color: $success-color;\r\n                    fill: $success-color;\r\n                }\r\n\r\n                &.yellow {\r\n                    color: $attention-color;\r\n                    fill: $attention-color;\r\n                }\r\n\r\n                &.red {\r\n                    color: $warning-base-color;\r\n                    fill: $warning-base-color;\r\n                }\r\n            }\r\n        }\r\n        .da-tile-checkbox-image {\r\n            width: 244px;\r\n            height: 90px;\r\n            color: $t4-base-color;\r\n            fill: $t4-base-color;\r\n            display: flex;\r\n            position: relative;\r\n            margin-bottom: 5px;\r\n            justify-content: center;\r\n            pointer-events: none;\r\n            font-size: 90px;\r\n\r\n            &.mobile {\r\n                width: 100%;\r\n                min-width: 244px;\r\n                font-size: 45px;\r\n                height: 45px;\r\n            }\r\n\r\n            &.checked {\r\n                color: $t4-secondary-color;\r\n                fill: $t4-secondary-color;\r\n            }\r\n        }\r\n    \r\n        input {\r\n            opacity: 0;\r\n            width: 0;\r\n            height: 0;\r\n    \r\n            &:checked ~ .da-tile-checkbox-icon-wrapper {\r\n                display: block;\r\n            }\r\n\r\n            &:checked ~ .da-tile-checkbox-image {\r\n                color: $t4-secondary-color;\r\n                fill: $t4-secondary-color;\r\n            }\r\n    \r\n            &:checked ~ .da-tile-checkbox-label {\r\n                color: $t4-secondary-color;\r\n                fill: $t4-secondary-color;\r\n            }\r\n        }\r\n\r\n        .da-tile-checkbox-label {\r\n            font-size: 20px;\r\n            color: $t4-base-color;\r\n            height: 100px;\r\n            display: flex;\r\n            position: relative;\r\n            align-items: center;\r\n            text-align: center;\r\n            justify-content: center;\r\n            width: 214px;\r\n            margin: 0 15px 15px;\r\n            overflow: hidden;\r\n            pointer-events: none;\r\n\r\n            &.mobile {\r\n                width: calc(100% - 30px);\r\n                height: auto;\r\n                font-size: 19px;\r\n            }\r\n\r\n            &.checked {\r\n                color: $t4-secondary-color;\r\n                fill: $t4-secondary-color;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    .da-tile-checkbox-expanded {\r\n        display: flex;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        transition: all 0.25s ease-in-out;\r\n\r\n        &.withContent {\r\n            padding-bottom: 14px;\r\n\r\n            &.mobile {\r\n                padding: 0 15px 35px 15px;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n",
                    "styleUrl": "./tile-checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"da-tile-checkbox-single\">\r\n    <label \r\n            class=\"da-tile-checkbox\" \r\n            [ngClass]=\"{'expanded' : checked, 'mobile' : screen.isSmallest()}\"\r\n        >\r\n        <input \r\n            type=\"checkbox\" \r\n            (change)=\"getValue($event)\" \r\n            [checked]=\"checked\"\r\n            [name]=\"name\"\r\n            [value]=\"value\"\r\n        >\r\n        <div class=\"da-tile-checkbox-icon-wrapper\" [ngClass]=\"{'checked' : checked}\">\r\n            <svg-icon class=\"da-tile-checkbox-icon green\" *ngIf=\"state === 'success'\" src=\"assets/images/circleCheck.svg\"></svg-icon>\r\n            <svg-icon class=\"da-tile-checkbox-icon yellow\" *ngIf=\"state === 'warning'\" src=\"assets/images/circleExclamation.svg\"></svg-icon>\r\n            <svg-icon class=\"da-tile-checkbox-icon red\" *ngIf=\"state === 'error'\" src=\"assets/images/circleXmark.svg\"></svg-icon>\r\n        </div>\r\n        <svg-icon *ngIf=\"image\" \r\n            class=\"da-tile-checkbox-image\" \r\n            [ngClass]=\"{'mobile' : screen.isSmallest(), 'checked' : checked}\"\r\n            [src]=\"image\"\r\n        >\r\n        </svg-icon>\r\n        <div *ngIf=\"!image\"\r\n            class=\"da-tile-checkbox-image\" \r\n            [ngClass]=\"{'mobile' : screen.isSmallest()}\"\r\n        >\r\n        </div>\r\n        <div \r\n            class=\"da-tile-checkbox-label\"\r\n            [ngClass]=\"{'mobile' : screen.isSmallest(), 'checked' : checked}\"\r\n        >{{label}}</div>\r\n        <div *ngIf=\"checked\" class=\"da-tile-checkbox-expanded\" [ngClass]=\"{'light' : light, 'withContent': content, 'mobile' : screen.isSmallest()}\">\r\n            <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n        </div>\r\n    </label>\r\n</div>"
        },
        {
            "name": "TileCheckboxGroupComponent",
            "id": "component-TileCheckboxGroupComponent-5515554d5ef019997b000505038c5e94ccad2aa1875c2efb9c1ffaa0fd6e32af52d165fad71c9e7e6ef08a6b5807e40f7bcedf85f33c08cab51ff52a50ecb350",
            "file": "projects/fm-library/src/lib/tiles/tile-checkbox-group/tile-checkbox-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-tile-checkbox-group",
            "styleUrls": [
                "./tile-checkbox-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tile-checkbox-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "tiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "withIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "tileValue",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "screen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HelperService",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "sendValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { HelperService } from '../../services/helper.service';\r\n\r\n@Component({\r\n  selector: 'lib-tile-checkbox-group',\r\n  templateUrl: './tile-checkbox-group.component.html',\r\n  styleUrls: ['./tile-checkbox-group.component.scss']\r\n})\r\nexport class TileCheckboxGroupComponent {\r\n  @Input() tiles: any;\r\n  @Input() withIndex!: boolean;\r\n  @Output() public tileValue:EventEmitter<any> = new EventEmitter<any>();\r\n  \r\n  constructor(\r\n    public screen: HelperService\r\n  ) { }\r\n\r\n  sendValue(e: any) {\r\n    this.tileValue.emit(e);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".da-tiles {\r\n    width: 100%;\r\n    display: flex;\r\n    column-gap: 24px;\r\n    row-gap: 24px;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    max-width: 1366px;\r\n\r\n    &.withIndex {\r\n        width: 100vw;\r\n        max-width: 100%;\r\n        justify-content: flex-start;\r\n        flex-wrap: nowrap;\r\n\r\n        &.mobile {\r\n            column-gap: 34px;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./tile-checkbox-group.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"da-tiles\" [ngClass]=\"{'withIndex' : withIndex, 'mobile': screen.isSmallest()}\">\r\n    <ng-container *ngFor=\"let tile of tiles; let num = index\">\r\n        <lib-tile-checkbox\r\n            [label]=\"tile.label\"\r\n            [name]=\"tile.name\"\r\n            [checked]=\"tile.checked\"\r\n            [image]=\"tile.image\"\r\n            [state]=\"tile.state\"\r\n            [value]=\"tile.value\"\r\n            [content]=\"tile.content\"\r\n            (checkboxValue)=\"sendValue($event)\">\r\n        </lib-tile-checkbox>\r\n    </ng-container>\r\n</div>"
        },
        {
            "name": "TileComponent",
            "id": "component-TileComponent-7defdfe73026a536bbf947edc9c001aed280f4d3d16cf3c3739061aa64aacdbbc661e4cfd66ddd4dc6fb2d6bc207bc105e22ffb508716bf2925263488a32c04e",
            "file": "projects/fm-library/src/lib/tiles/tile/tile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-tile",
            "styleUrls": [
                "./tile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "localValue",
                    "defaultValue": "'localValue'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "state",
                    "defaultValue": "'state'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "'value'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "checkboxValue",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "expanded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "screen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HelperService",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onWindowResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostListener, Input, OnChanges, Output, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { HelperService } from '../../services/helper.service';\r\n\r\n@Component({\r\n  selector: 'lib-tile',\r\n  templateUrl: './tile.component.html',\r\n  styleUrls: ['./tile.component.scss']\r\n})\r\nexport class TileComponent implements OnChanges {\r\n  @Input() label: string = 'label';\r\n  @Input() name: string = 'name';\r\n  @Input() checked: boolean = false;\r\n  @Input() value: string = 'value';\r\n  @Input() localValue: string = 'localValue';\r\n  @Input() state: string = 'state';\r\n  @Input() image?: string;\r\n  @Input() light: boolean = true;\r\n  @Input() content!: TemplateRef<any>;\r\n  expanded!: boolean;\r\n\r\n  @Output() public checkboxValue: EventEmitter<any> = new EventEmitter<boolean>();\r\n\r\n  constructor(\r\n    public screen: HelperService\r\n  ) { }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onWindowResize() {\r\n    this.screen.updateScreenSizes();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes && changes['localValue']) {\r\n      this.expanded = this.localValue !== this.value ? false : true;\r\n    }\r\n  }\r\n\r\n  getValue(e: any) {\r\n    this.checkboxValue.emit(e.srcElement.value);\r\n  }\r\n\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\"; \r\n\r\n.da-tile-single {\r\n    font-family: $font;\r\n\r\n    .da-tile {\r\n        position: relative;\r\n        display: inline-block;\r\n        border-radius: 25px;\r\n        border: 1px solid transparent;\r\n        width: 242px;\r\n        min-height: 222px;\r\n        background-color: $radiobutton-base-color;\r\n        box-shadow: 0 3px 5px $shadow-base-color;\r\n        transition: all 0.25s ease-in-out;\r\n        padding-bottom: 14px;\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n            border: 1px solid $button-base-color;\r\n        }\r\n\r\n        &.expanded {\r\n            background-color: $button-base-color;\r\n            border: 1px solid $button-base-color;\r\n\r\n        }\r\n\r\n        &.mobile {\r\n            width: calc(100vw - 50px);\r\n            min-height: auto;\r\n            padding-bottom: 0;\r\n\r\n        }\r\n     \r\n        .da-tile-icon-wrapper {\r\n                margin-left: 15px;\r\n                top: 15px;\r\n                position: absolute;\r\n                background: #fff;\r\n                font-size: 25px;\r\n                width: 23px;\r\n                height: 23px;\r\n                border-radius: 25px;\r\n                box-shadow: 0 3px 5px $shadow-base-color;\r\n                display: none;\r\n\r\n                &.checked {\r\n                    display: block;\r\n                }\r\n\r\n            .da-tile-icon {\r\n                position: absolute;\r\n                top: -1px;\r\n                left: -1px;\r\n\r\n                &.green {\r\n                    color: $success-color;\r\n                    fill: $success-color;\r\n                }\r\n\r\n                &.yellow {\r\n                    color: $attention-color;\r\n                    fill: $attention-color;\r\n                }\r\n\r\n                &.red {\r\n                    color: $warning-base-color;\r\n                    fill: $warning-base-color;\r\n                }\r\n            }\r\n        }\r\n        .da-tile-image {\r\n            width: 244px;\r\n            height: 90px;\r\n            color: $t4-base-color;\r\n            fill: $t4-base-color;\r\n            display: flex;\r\n            position: relative;\r\n            margin-bottom: 5px;\r\n            justify-content: center;\r\n            pointer-events: none;\r\n            font-size: 90px;\r\n\r\n            &.mobile {\r\n                width: 100%;\r\n                min-width: 244px;\r\n                font-size: 45px;\r\n                height: 45px;\r\n            }\r\n\r\n            &.checked {\r\n                color: $t4-secondary-color;\r\n                fill: $t4-secondary-color;\r\n            }\r\n        }\r\n    \r\n        input {\r\n            opacity: 0;\r\n            width: 0;\r\n            height: 0;\r\n    \r\n            &:checked ~ .da-tile-icon-wrapper {\r\n                display: block;\r\n            }\r\n\r\n            &:checked ~ .da-tile-image {\r\n                color: $t4-secondary-color;\r\n                fill: $t4-secondary-color;\r\n            }\r\n    \r\n            &:checked ~ .da-tile-label {\r\n                color: $t4-secondary-color;\r\n                fill: $t4-secondary-color;\r\n            }\r\n        }\r\n\r\n        .da-tile-label {\r\n            font-size: 20px;\r\n            color: $t4-base-color;\r\n            height: 100px;\r\n            display: flex;\r\n            position: relative;\r\n            align-items: center;\r\n            text-align: center;\r\n            justify-content: center;\r\n            width: 214px;\r\n            margin: 0 15px 15px;\r\n            overflow: hidden;\r\n            pointer-events: none;\r\n\r\n            &.mobile {\r\n                width: calc(100% - 30px);\r\n                font-size: 19px;\r\n                height: auto;\r\n            }\r\n\r\n            &.checked {\r\n                color: $t4-secondary-color;\r\n                fill: $t4-secondary-color;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    .da-tile-expanded {\r\n        display: flex;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        transition: all 0.25s ease-in-out;\r\n\r\n        &.withContent {\r\n            padding-bottom: 14px;\r\n\r\n            &.mobile {\r\n                padding: 0 15px 35px 15px;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n",
                    "styleUrl": "./tile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"da-tile-single\">\r\n    <label \r\n            class=\"da-tile\" \r\n            [ngClass]=\"{'expanded' : expanded, 'mobile' : screen.isSmallest()}\"\r\n        >\r\n        <input \r\n            type=\"radio\" \r\n            (change)=\"getValue($event)\" \r\n            [checked]=\"checked\"\r\n            [name]=\"name\"\r\n            [value]=\"value\"\r\n        >\r\n        <div class=\"da-tile-icon-wrapper\" [ngClass]=\"{'checked' : checked}\">\r\n            <svg-icon class=\"da-tile-icon green\" *ngIf=\"state === 'success'\" src=\"assets/images/circleCheck.svg\"></svg-icon>\r\n            <svg-icon class=\"da-tile-icon yellow\" *ngIf=\"state === 'warning'\" src=\"assets/images/circleExclamation.svg\"></svg-icon>\r\n            <svg-icon class=\"da-tile-icon red\" *ngIf=\"state === 'error'\" src=\"assets/images/circleXmark.svg\"></svg-icon>\r\n        </div>\r\n        <svg-icon *ngIf=\"image\" \r\n            class=\"da-tile-image\" \r\n            [ngClass]=\"{'mobile' : screen.isSmallest(), 'checked' : checked}\"\r\n            [src]=\"image\"\r\n        >\r\n        </svg-icon>\r\n        <div *ngIf=\"!image\"\r\n            class=\"da-tile-image\" \r\n            [ngClass]=\"{'mobile' : screen.isSmallest()}\"\r\n        >\r\n        </div>\r\n        <div \r\n            class=\"da-tile-label\"\r\n            [ngClass]=\"{'mobile' : screen.isSmallest(), 'checked' : checked}\"\r\n        >{{label}}</div>\r\n        <div *ngIf=\"expanded\" class=\"da-tile-expanded\" [ngClass]=\"{'light' : light, 'withContent': content, 'mobile' : screen.isSmallest()}\">\r\n            <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n        </div>\r\n    </label>\r\n</div>"
        },
        {
            "name": "TileGroupComponent",
            "id": "component-TileGroupComponent-7d8318921e1b29ad734fbfbcdf2f309fb8008907cdf93930f58239825935a7fd57cef878b9bad0ce85cb7520b3a7bafae30f0248bc9cd6d116440849e035edd5",
            "file": "projects/fm-library/src/lib/tiles/tile-group/tile-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-tile-group",
            "styleUrls": [
                "./tile-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tile-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "localValue",
                    "defaultValue": "'localValue'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "withIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "tileValue",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "screen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HelperService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "sendValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { HelperService } from '../../services/helper.service';\r\n\r\n@Component({\r\n  selector: 'lib-tile-group',\r\n  templateUrl: './tile-group.component.html',\r\n  styleUrls: ['./tile-group.component.scss']\r\n})\r\nexport class TileGroupComponent {\r\n  @Input() tiles: any;\r\n  @Input() localValue: string = 'localValue';\r\n  @Input() withIndex!: boolean;\r\n  @Output() public tileValue:EventEmitter<any> = new EventEmitter<any>();\r\n  \r\n  constructor(\r\n    public screen: HelperService\r\n  ) { }\r\n\r\n  sendValue(e: any) {\r\n    this.localValue = e;\r\n    this.tileValue.emit(e);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".da-tiles {\r\n    width: 100%;\r\n    display: flex;\r\n    column-gap: 24px;\r\n    row-gap: 24px;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    max-width: 1366px;\r\n\r\n    &.withIndex {\r\n        width: 100vw;\r\n        max-width: 100%;\r\n        justify-content: flex-start;\r\n        flex-wrap: nowrap;\r\n\r\n        &.mobile {\r\n            column-gap: 34px;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./tile-group.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"da-tiles\" [ngClass]=\"{'withIndex' : withIndex, 'mobile': screen.isSmallest()}\">\r\n    <ng-container *ngFor=\"let tile of tiles; let num = index\">\r\n        <lib-tile \r\n            [label]=\"tile.label\"\r\n            [name]=\"tile.name\"\r\n            [checked]=\"tile.checked\"\r\n            [image]=\"tile.image\"\r\n            [state]=\"tile.state\"\r\n            [value]=\"tile.value\"\r\n            [content]=\"tile.content\"\r\n            [localValue]=\"localValue\"\r\n            (checkboxValue)=\"sendValue($event)\">\r\n        </lib-tile>\r\n    </ng-container>\r\n</div>\r\n"
        },
        {
            "name": "TileRatingComponent",
            "id": "component-TileRatingComponent-2ec90dcdbd991fc04c0bed2e1e0825f8af728e404f3458be26f3f9f55a86d3ad6e722de0d03b78bc74edd37953a31ac7b205874258d1c63b7675e7c6eedfc4c1",
            "file": "projects/fm-library/src/lib/tiles/tile-rating/tile-rating.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-tile-rating",
            "styleUrls": [
                "./tile-rating.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tile-rating.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "info",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rating",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "stars",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "success",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "infoValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "ratingValue",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "screen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HelperService",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getInfo",
                    "args": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\r\nimport { HelperService } from '../../services/helper.service';\r\n\r\n@Component({\r\n  selector: 'lib-tile-rating',\r\n  templateUrl: './tile-rating.component.html',\r\n  styleUrls: ['./tile-rating.component.scss'],\r\n})\r\n\r\nexport class TileRatingComponent implements OnInit {\r\n  @Input() label: string = 'label';\r\n  @Input() name: string = 'name';\r\n  @Input() stars: number = 5;\r\n  @Input() info:  string = '';\r\n  @Input() rating: number = 0;\r\n  @Input() success!: boolean;\r\n  @Output() public ratingValue:EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() public infoValue:EventEmitter<any> = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    public screen: HelperService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getValue(e: any) {\r\n    const name = this.name;\r\n    const rating = e.rating;\r\n    this.success = true;\r\n    this.ratingValue.emit({rating, name});\r\n  }\r\n\r\n  getInfo(e: string) {\r\n    this.infoValue.emit(e);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\"; \r\n\r\n.da-tile-rating-single {\r\n    font-family: $font;\r\n\r\n    .da-tile-rating {\r\n        position: relative;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        border-radius: 25px;\r\n        border: 1px solid transparent;\r\n        width: 242px;\r\n        min-height: 222px;\r\n        background-color: $radiobutton-base-color;\r\n        box-shadow: 0 3px 5px $shadow-base-color;\r\n        transition: all 0.25s ease-in-out;\r\n        padding-bottom: 14px;\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n            border: 1px solid $button-base-color;\r\n        }\r\n\r\n        &.expanded {\r\n            background-color: $button-base-color;\r\n            border: 1px solid $button-base-color;\r\n        }\r\n\r\n        &.mobile {\r\n            width: calc(100vw - 50px);\r\n            min-height: auto;\r\n            padding-bottom: 0;\r\n        }\r\n     \r\n        .da-tile-rating-icon-wrapper {\r\n                left: 15px;\r\n                top: 15px;\r\n                position: absolute;\r\n                font-size: 1.5rem;\r\n                background: #fff;\r\n                border-radius: 20px;\r\n                font-size: 25px;\r\n                width: 23px;\r\n                height: 23px;\r\n                border-radius: 25px;\r\n                box-shadow: 0 3px 5px $shadow-base-color;\r\n\r\n            .da-tile-rating-icon {\r\n                position: absolute;\r\n                top: -1px;\r\n                left: -1px;\r\n                color: $success-color;\r\n                fill: $success-color;\r\n\r\n                &.yellow {\r\n                    color: $attention-color;\r\n                    fill: $attention-color;\r\n                }\r\n\r\n            }\r\n        }\r\n        .da-tile-rating-stars {\r\n            height: 112px;\r\n            color: $t4-base-color;\r\n            fill: $t4-base-color;\r\n            display: flex;\r\n            position: relative;\r\n            justify-content: center;\r\n            align-items: flex-end;\r\n        }\r\n    \r\n        input {\r\n            opacity: 0;\r\n            width: 0;\r\n            height: 0;\r\n    \r\n            &:checked ~ .da-tile-rating-icon-wrapper {\r\n                display: block;\r\n            }\r\n\r\n            &:checked ~ .da-tile-rating-image {\r\n                color: $t4-secondary-color;\r\n            }\r\n    \r\n            &:checked ~ .da-tile-rating-label {\r\n                color: $t4-secondary-color;\r\n            }\r\n        }\r\n\r\n        .da-tile-rating-label {\r\n            font-size: 20px;\r\n            color: $t4-base-color;\r\n            height: 100px;\r\n            display: flex;\r\n            position: relative;\r\n            align-items: flex-start;\r\n            text-align: center;\r\n            justify-content: center;\r\n            width: 175px;\r\n            margin: 15px 15px 0 15px;\r\n            overflow: hidden;\r\n\r\n        }\r\n\r\n        .da-tile-rating-info-button {\r\n            margin-left: 10px;\r\n            margin-top: 5px;\r\n        }\r\n    }\r\n\r\n    .da-tile-rating-expanded {\r\n        display: flex;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        transition: all 0.25s ease-in-out;\r\n    }\r\n}\r\n\r\n\r\n\r\n",
                    "styleUrl": "./tile-rating.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"da-tile-rating-single\">\r\n    <div class=\"da-tile-rating\" [ngClass]=\"{'mobile' : screen.isSmallest()}\">\r\n        <div class=\"da-tile-rating-icon-wrapper\" >\r\n            <svg-icon *ngIf=\"!success\" class=\"da-tile-rating-icon yellow\" src=\"assets/images/circleExclamation.svg\"></svg-icon>\r\n            <svg-icon *ngIf=\"success\" class=\"da-tile-rating-icon\" src=\"assets/images/circleCheck.svg\"></svg-icon>\r\n        </div>\r\n        <div class=\"da-tile-rating-stars\">\r\n            <star-rating \r\n            [starType]=\"'svg'\"\r\n            size=\"large\"\r\n            [numOfStars]=\"stars\" \r\n            [rating]=\"rating\"\r\n            [hoverEnabled]=\"true\"\r\n            (starClickChange)=\"getValue($event)\"\r\n            ></star-rating>\r\n        </div>\r\n\r\n        <div class=\"da-tile-rating-label\">{{label}}\r\n            <div class=\"da-tile-rating-info-button\" *ngIf=\"info\">\r\n                <lib-info-button \r\n                    [light]=\"false\" \r\n                    [id]=\"info\"\r\n                    (infoPressed)=\"getInfo($event)\"\r\n                ></lib-info-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "TileTextComponent",
            "id": "component-TileTextComponent-fbb306bd2ab961e6e3012acdd002e843a2096c205534284a91d31653f8ba6b55c42bd4a1a8e141aff4d21a340f2595ff6612c2238cfc5802165ef12d803dacb8",
            "file": "projects/fm-library/src/lib/text/tile-text/tile-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-tile-text",
            "styleUrls": [
                "./tile-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tile-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "convertMobile",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "info",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'16px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "thin",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "infoValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "mobileSize",
                    "defaultValue": "'14px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "screen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HelperService",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getInfo",
                    "args": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onWindowResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\r\nimport { HelperService } from '../../services/helper.service';\r\n\r\n@Component({\r\n  selector: 'lib-tile-text',\r\n  templateUrl: './tile-text.component.html',\r\n  styleUrls: ['./tile-text.component.scss']\r\n})\r\nexport class TileTextComponent implements OnInit {\r\n  @Input() label: string = 'label';\r\n  @Input() light: boolean = false;\r\n  @Input() thin: boolean = false;\r\n  @Input() info: string = '';\r\n  @Input() convertMobile: boolean = false;\r\n  @Input() size: string = '16px';\r\n  mobileSize: string = '14px';\r\n\r\n  @Output() public infoValue:EventEmitter<any> = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    public screen: HelperService\r\n  ) { }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onWindowResize() {\r\n    this.screen.updateScreenSizes();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.mobileSize = this.screen.convertMobileFont(this.size, 0.875);\r\n  }\r\n\r\n  getInfo(e: string) {\r\n    this.infoValue.emit(e);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\";\r\n\r\n.da-tile-text-wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .da-tile-text {\r\n        font-family: $font;\r\n        font-weight: 400;\r\n        color: $t1-base-color;\r\n    \r\n        &.light {\r\n            color: $t1-secondary-color;\r\n        }\r\n\r\n        &.thin {\r\n            font-weight: 300;\r\n        }\r\n    }\r\n\r\n    .da-text-info-button {\r\n        margin-left: 10px;\r\n    }\r\n}\r\n\r\n",
                    "styleUrl": "./tile-text.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "screen",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"da-tile-text-wrapper\">\r\n    <p class=\"da-tile-text\" \r\n        [ngClass]=\"{'light' : light, 'thin': thin}\"  \r\n        [ngStyle]=\"screen.isSmallest() && convertMobile ? {'font-size': mobileSize} : {'font-size': size}\"\r\n    >\r\n        {{label}}\r\n    </p>\r\n    <div class=\"da-text-info-button\" *ngIf=\"info\">\r\n        <lib-info-button \r\n            [light]=\"light\" \r\n            [id]=\"info\" \r\n            (infoPressed)=\"getInfo($event)\"\r\n        ></lib-info-button>\r\n    </div>\r\n</div>"
        },
        {
            "name": "ToggleCheckboxComponent",
            "id": "component-ToggleCheckboxComponent-79c5fa8675f7f6717773fc1eb1461ef54bc1d0e6e24f4519bbe3f3766fe7e17ea0bd6d36379348d3bec199c91f747b46e29a22bb1bd2094b5c8dfddb27ad4e2e",
            "file": "projects/fm-library/src/lib/toggle/toggle-checkbox/toggle-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-toggle-checkbox",
            "styleUrls": [
                "./toggle-checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toggle-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "dynLabelClassName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "checkboxValue",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getLabelClassNames",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-toggle-checkbox',\r\n  templateUrl: './toggle-checkbox.component.html',\r\n  styleUrls: ['./toggle-checkbox.component.scss']\r\n})\r\nexport class ToggleCheckboxComponent implements OnInit {\r\n  @Input() form: any;\r\n  @Input() label: string = 'label';\r\n  @Input() dynLabelClassName?: string;\r\n  @Input() name: string = 'name'; \r\n  @Input() checked: boolean = false;\r\n  @Input() light: boolean = false;\r\n  @Output() public checkboxValue:EventEmitter<any> = new EventEmitter<boolean>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getValue(e: any) {\r\n    this.checkboxValue.emit(e.srcElement.checked);\r\n  }\r\n\r\n  getLabelClassNames() {\r\n    let label = 'da-switch-label';\r\n    if (this.light) {\r\n      label = label + ' light';\r\n    }\r\n    if (this.dynLabelClassName) {\r\n      label = label + ' ' + this.dynLabelClassName;\r\n    }\r\n    return label;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\";\r\n\r\n.da-toggle-checkbox {\r\n    font-family: $font;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    .da-switch {\r\n        position: relative;\r\n        display: inline-block;\r\n        background-color: #fff;\r\n        box-shadow: 0 3px 5px $shadow-base-color;\r\n        border-radius: 25px;\r\n        width: 50px;\r\n        height: 25px;\r\n\r\n        &.light {\r\n            box-shadow: 0 3px 5px $shadow-secondary-color;\r\n        }\r\n    \r\n        input {\r\n            opacity: 0;\r\n            width: 0;\r\n            height: 0;\r\n    \r\n            &:checked + .da-switch-slider {\r\n                background-color: $success-color;\r\n                width: 34px;\r\n            }\r\n    \r\n            &:checked + .da-switch-slider {\r\n                -webkit-transform: translateX(-25px);\r\n                -ms-transform: translateX(-25px);\r\n                transform: translateX(-25px);\r\n            }\r\n\r\n            &:checked + .da-switch-slider >  .da-switch-icon{\r\n                color: $success-color;\r\n                fill: $success-color;\r\n            }\r\n        }\r\n    \r\n        .da-switch-slider {\r\n            position: absolute;\r\n            cursor: pointer;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            color: #fff;\r\n            left: 25px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            height: 25px;\r\n            width: 25px;\r\n            border-radius: 25px;\r\n            background-color: #ccc;\r\n            -webkit-transition: 0.4s;\r\n            transition: 0.4s;\r\n\r\n            .da-switch-icon {\r\n                fill: #fff;\r\n                color: #fff;\r\n                margin-top: 3px;\r\n                -webkit-transition: 0.4s;\r\n                transition: 0.4s;\r\n            }\r\n        }\r\n    }\r\n    .da-switch-label {\r\n        font-size: 14px;\r\n        color: $t4-base-color;\r\n        position: relative;\r\n        white-space: nowrap;\r\n        left: 10px;\r\n\r\n        &.light {\r\n            color: $t4-secondary-color;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n",
                    "styleUrl": "./toggle-checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"da-toggle-checkbox\">\r\n    <!-- Form Input -->\r\n    <label *ngIf=\"form\" class=\"da-switch\" [ngClass]=\"{'light' : light}\" [formGroup]=\"form\">\r\n        <input \r\n            type=\"checkbox\" \r\n            (change)=\"getValue($event)\" \r\n            [checked]=\"checked\"\r\n            [formControlName]=\"name\"\r\n        >\r\n        <span class=\"da-switch-slider\">\r\n            <svg-icon class=\"da-switch-icon\" src=\"assets/images/xmark.svg\"></svg-icon>\r\n        </span>\r\n    </label>\r\n    <!-- No Form Input -->\r\n    <label *ngIf=\"!form\" class=\"da-switch\" [ngClass]=\"{'light' : light}\">\r\n        <input \r\n            type=\"checkbox\" \r\n            (change)=\"getValue($event)\" \r\n            [checked]=\"checked\"\r\n            [name]=\"name\"\r\n        >\r\n        <span class=\"da-switch-slider\">\r\n            <svg-icon class=\"da-switch-icon\" src=\"assets/images/xmark.svg\"></svg-icon>\r\n        </span>\r\n    </label>\r\n    <span [ngClass]=\"getLabelClassNames()\">{{label}}</span>\r\n</div>\r\n\r\n"
        },
        {
            "name": "ToggleComponent",
            "id": "component-ToggleComponent-fc202478e7ec6d0ea8de7cb1cb0c26f79bfefb540aeeeb0532a7782d38411dcfee8ad7ffe652c227b2d77937c7f422237edabeb13f03cca107dbe72a0adf8b03",
            "file": "projects/fm-library/src/lib/toggle/toggle/toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-toggle",
            "styleUrls": [
                "./toggle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toggle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label1",
                    "defaultValue": "'label1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label2",
                    "defaultValue": "'label2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "localValue",
                    "defaultValue": "'localValue'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value1",
                    "defaultValue": "'value1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value2",
                    "defaultValue": "'value2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "switchValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getCheckedOption",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\r\n@Component({\r\n  selector: 'lib-toggle',\r\n  templateUrl: './toggle.component.html',\r\n  styleUrls: ['./toggle.component.scss']\r\n})\r\nexport class ToggleComponent implements OnChanges{\r\n  @Input() name: string = 'name';\r\n  @Input() label1: string = 'label1';\r\n  @Input() value1: string = 'value1';\r\n  @Input() label2: string = 'label2';\r\n  @Input() value2: string = 'value2';\r\n  @Input() localValue: string = 'localValue';\r\n  @Input() light: boolean = false;\r\n\r\n  @Output() public switchValue:EventEmitter<any> = new EventEmitter<string>();\r\n  \r\n  constructor() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if(changes['localValue']) {\r\n      this.localValue = changes['localValue'].currentValue;\r\n    }\r\n  }\r\n\r\n  getCheckedOption(value: string) {\r\n    return this.localValue == value;\r\n  }\r\n\r\n  getValue(e: any) {\r\n    this.localValue = e.srcElement.value;\r\n    this.switchValue.emit(e.srcElement.value);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\";  \r\n\r\n.da-toggle {\r\n    font-family: $font;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 200px;\r\n    height: 42px;\r\n    border-radius: 21px;\r\n    background-color: #fff;\r\n    box-shadow: 0 3px 5px $shadow-base-color;\r\n\r\n    &.light {\r\n        box-shadow: 0 3px 5px $shadow-secondary-color;\r\n    }\r\n\r\n    .da-switch {\r\n        position: relative;\r\n        cursor: pointer;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        border-radius: 21px;\r\n        width: 92px;\r\n        height: 42px;\r\n        -webkit-transition: 0.4s;\r\n        transition: 0.4s;\r\n\r\n\r\n        input {\r\n            opacity: 0;\r\n            width: 0;\r\n            height: 0;\r\n\r\n            &:checked + .da-switch-slider {\r\n                background-color: $success-color;\r\n                color: #fff;\r\n                fill: #fff;\r\n                box-shadow: 0 3px 5px $shadow-base-color;\r\n                z-index: 2;\r\n            }\r\n\r\n            &:checked + .da-switch-slider.light {\r\n                background-color: $success-color;\r\n                color: #fff;\r\n                fill: #fff;\r\n                box-shadow: 0 3px 5px $shadow-secondary-color;\r\n                z-index: 2;\r\n            }\r\n\r\n        }\r\n\r\n        .da-switch-label {\r\n            position: relative;\r\n            white-space: nowrap;\r\n            pointer-events: none;\r\n            left: 10px;\r\n            z-index: 1;\r\n        }\r\n        .da-switch-icon {\r\n            font-size: 1.5rem;\r\n            z-index: 1;\r\n            color: #fff;\r\n            fill: #fff;\r\n            margin-right: -5px;\r\n            margin-top: 5px;\r\n            pointer-events: none;\r\n        }\r\n\r\n        .da-switch-slider {\r\n            position: absolute;\r\n            cursor: pointer;\r\n            top: 0;\r\n            bottom: 0;\r\n            height: 42px;\r\n            width: 100%;\r\n            color: $t1-base-color;\r\n            fill: $t1-base-color;\r\n            border-radius: 21px;\r\n            z-index: 1;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-around;\r\n            -webkit-transition: 0.4s;\r\n            transition: 0.4s;\r\n\r\n            &.right {\r\n                right: -1px;\r\n                left: 0px;\r\n                width: 100px;\r\n            }\r\n\r\n            &.left {\r\n                left: -8px;\r\n                right: 0px;\r\n                width: 100px;\r\n            }\r\n\r\n            &:before {\r\n                position: absolute;\r\n                content: \"\";\r\n                height: 42px;\r\n                width: 100%;\r\n                border-radius: 21px;\r\n                -webkit-transition: 0.4s;\r\n                transition: 0.4s;\r\n            }\r\n\r\n            &.left:hover {\r\n                background-color: #ccc;\r\n                box-shadow: 0 3px 5px $shadow-base-color;\r\n                color: #fff;\r\n                fill: #fff;\r\n\r\n\r\n            }\r\n\r\n            &.right:hover {\r\n                background-color: #ccc;\r\n                box-shadow: 0 3px 5px $shadow-base-color;\r\n                color: #fff;\r\n                fill: #fff;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n",
                    "styleUrl": "./toggle.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"da-toggle\" [ngClass]=\"{'light' : light}\">\r\n    <label class=\"da-switch left\">\r\n        <input \r\n            type=\"radio\" \r\n            (change)=\"getValue($event)\" \r\n            [name]=\"name\" \r\n            [value]=\"value1\"\r\n            [checked]=\"getCheckedOption(value1)\"\r\n        >\r\n        <div class=\"da-switch-slider left\" [ngClass]=\"{'light' : light}\">\r\n            <span class=\"da-switch-label\">{{label1}}</span>\r\n            <svg-icon class=\"da-switch-icon\" src=\"assets/images/circleCheck.svg\"></svg-icon>\r\n        </div>\r\n    </label>\r\n    <label class=\"da-switch right\">\r\n        <input \r\n            type=\"radio\" \r\n            (change)=\"getValue($event)\" \r\n            [name]=\"name\" \r\n            [value]=\"value2\"\r\n            [checked]=\"getCheckedOption(value2)\"\r\n        >\r\n        <div class=\"da-switch-slider right\" [ngClass]=\"{'light' : light}\">\r\n            <span class=\"da-switch-label\">{{label2}}</span>\r\n            <svg-icon class=\"da-switch-icon\" src=\"assets/images/circleCheck.svg\"></svg-icon>\r\n        </div>\r\n\r\n    </label>\r\n</div>\r\n\r\n"
        },
        {
            "name": "ToggleHorizontalComponent",
            "id": "component-ToggleHorizontalComponent-ae1b2ee7a93378ec3bf4cc9315463443a05ef7ad6340f71dba437139a014b8760caeec2801e9cb6d6df1cf4197078c792067ad0997b8277f32944fe2257c2e01",
            "file": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-toggle-horizontal",
            "styleUrls": [
                "./toggle-horizontal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toggle-horizontal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "elementWidth",
                    "defaultValue": "'100px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "localValue",
                    "defaultValue": "'localValue'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "switchValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getCheckedOption",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-toggle-horizontal',\r\n  templateUrl: './toggle-horizontal.component.html',\r\n  styleUrls: ['./toggle-horizontal.component.scss']\r\n})\r\nexport class ToggleHorizontalComponent {\r\n\r\n  @Input() name: string = 'name';\r\n  @Input() label?: string;\r\n  @Input() options: any;\r\n  @Input() light: boolean = false;\r\n  @Input() localValue: string = 'localValue';\r\n  @Input() elementWidth: string = '100px';\r\n\r\n  @Output() public switchValue:EventEmitter<any> = new EventEmitter<string>();\r\n  \r\n  constructor() {}\r\n\r\n  getCheckedOption(value: string) {\r\n    return this.localValue === value;\r\n  }\r\n\r\n  sendValue(e: any) {\r\n    this.localValue = e;\r\n    this.switchValue.emit(e.srcElement.value);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\";  \r\n\r\n.da-toggle-horizontal-wrapper {\r\n    font-family: $font;\r\n    width: fit-content;\r\n\r\n    .da-toggle-horizontal-label {\r\n        font-size: $t4-base-size;\r\n        margin-bottom: 3px;\r\n        text-align: left;\r\n        margin-left: 21px;\r\n        color: $t4-base-color;\r\n\r\n        &.light {\r\n            color: $t4-secondary-color;\r\n        }\r\n    }\r\n\r\n    .da-toggle-horizontal {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        // width: 300px;\r\n        width: auto;\r\n        overflow: hidden;\r\n        flex-direction: row;\r\n        border-radius: 21px;\r\n        background-color: #fff;\r\n        box-shadow: 0 3px 5px $shadow-base-color;\r\n    \r\n        &.light {\r\n            box-shadow: 0 3px 5px $shadow-secondary-color;\r\n        }\r\n    \r\n        .da-switch {\r\n            position: relative;\r\n            cursor: pointer;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            border-radius: 21px;\r\n            // width: 110px;\r\n            height: 42px;\r\n            -webkit-transition: 0.4s;\r\n            transition: 0.4s;\r\n    \r\n    \r\n            input {\r\n                opacity: 0;\r\n                width: 0;\r\n                height: 0;\r\n    \r\n                &:checked + .da-switch-slider {\r\n                    background-color: $success-color;\r\n                    color: #fff;\r\n                    fill: #fff;\r\n                    box-shadow: 0 3px 5px $shadow-base-color;\r\n                    z-index: 2;\r\n                }\r\n    \r\n                &:checked + .da-switch-slider.light {\r\n                    background-color: $success-color;\r\n                    color: #fff;\r\n                    fill: #fff;\r\n                    box-shadow: 0 3px 5px $shadow-secondary-color;\r\n                    z-index: 2;\r\n                }\r\n    \r\n            }\r\n    \r\n            .da-switch-label {\r\n                position: relative;\r\n                white-space: nowrap;\r\n                pointer-events: none;\r\n                left: 20px;\r\n                z-index: 1;\r\n            }\r\n            .da-switch-icon {\r\n                font-size: 1.5rem;\r\n                z-index: 1;\r\n                color: #fff;\r\n                fill: #fff;\r\n                margin-right: 10px;\r\n                margin-top: 5px;\r\n                pointer-events: none;\r\n            }\r\n    \r\n            .da-switch-slider {\r\n                position: absolute;\r\n                cursor: pointer;\r\n                top: 0;\r\n                bottom: 0;\r\n                height: 42px;\r\n                width: 100%;\r\n                color: $t1-base-color;\r\n                fill: $t1-base-color;\r\n                border-radius: 21px;\r\n                z-index: 1;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: space-between;\r\n                -webkit-transition: 0.4s;\r\n                transition: 0.4s;\r\n    \r\n                &.bottom {\r\n                    right: 0px;\r\n                    left: 0px;\r\n                    // width: 110px;\r\n                }\r\n    \r\n                &.top {\r\n                    left: 0px;\r\n                    right: 0px;\r\n                    // width: 110px;\r\n                }\r\n    \r\n                &:before {\r\n                    pointer-events: none;\r\n                    position: absolute;\r\n                    content: \"\";\r\n                    height: 42px;\r\n                    width: 200%;\r\n                    border-radius: 21px;\r\n                    -webkit-transition: 0.4s;\r\n                    transition: 0.4s;\r\n                }\r\n    \r\n                &.top:hover {\r\n                    background-color: #ccc;\r\n                    box-shadow: 0 3px 5px $shadow-base-color;\r\n                    color: #fff;\r\n                    fill: #fff;\r\n    \r\n    \r\n                }\r\n    \r\n                &.bottom:hover {\r\n                    background-color: #ccc;\r\n                    box-shadow: 0 3px 5px $shadow-base-color;\r\n                    color: #fff;\r\n                    fill: #fff;\r\n                }\r\n            }\r\n        }\r\n    }    \r\n}\r\n\r\n",
                    "styleUrl": "./toggle-horizontal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "templateData": "<div class=\"da-toggle-horizontal-wrapper\">\r\n    <div class=\"da-toggle-horizontal-label\" [ngClass]=\"{'light' : light}\" *ngIf=\"label\">{{label}}</div>\r\n    <div class=\"da-toggle-horizontal\" [ngClass]=\"{'light' : light}\">\r\n        <ng-container *ngFor=\"let option of options; let num = index\">\r\n            <label class=\"da-switch top\" [ngStyle]=\"{ 'width': elementWidth }\">\r\n                <input \r\n                    type=\"radio\" \r\n                    (change)=\"sendValue($event)\" \r\n                    [name]=\"name\" \r\n                    [value]=\"option.value\"\r\n                    [checked]=\"getCheckedOption(option.value)\"\r\n                >\r\n                <div class=\"da-switch-slider top\" [ngClass]=\"{'light' : light}\" [ngStyle]=\"{ 'width': elementWidth }\">\r\n                    <span class=\"da-switch-label\">{{option.label}}</span>\r\n                    <svg-icon class=\"da-switch-icon\" src=\"assets/images/circleCheck.svg\"></svg-icon>\r\n                </div>\r\n            </label>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n\r\n"
        },
        {
            "name": "ToggleTristateComponent",
            "id": "component-ToggleTristateComponent-c2963df23b733ec7d15019b809462776d943e99f5008d155c009ccdb3ceca1f2b6d984c97e29bd8b517b8ef45500514e3806db77e517cfa0d27ab94848e907c9",
            "file": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-toggle-tristate",
            "styleUrls": [
                "./toggle-tristate.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toggle-tristate.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "name",
                    "defaultValue": "'tristate-input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "switchValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-toggle-tristate',\r\n  templateUrl: './toggle-tristate.component.html',\r\n  styleUrls: ['./toggle-tristate.component.scss']\r\n})\r\nexport class ToggleTristateComponent implements OnInit {\r\n  @Input() tabs: any;\r\n  @Input() name: string = 'tristate-input'\r\n  @Output() public switchValue:EventEmitter<any> = new EventEmitter<string>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getValue(e: any) {\r\n    this.switchValue.emit(e.srcElement.value);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\";  \r\n\r\n.da-toggle-tristate {\r\n    font-family: $font;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 200px;\r\n    height: 42px;\r\n    border-radius: 21px;\r\n    background-color: #fff;\r\n    box-shadow: 0 3px 5px $shadow-base-color;\r\n\r\n    .da-tab {\r\n        position: relative;\r\n        cursor: pointer;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        border-radius: 21px;\r\n        width: 100px;\r\n        height: 42px;\r\n        -webkit-transition: 0.4s;\r\n        transition: 0.4s;\r\n\r\n\r\n        input {\r\n            opacity: 0;\r\n            width: 0;\r\n            height: 0;\r\n\r\n            &:checked + .da-tab-slider {\r\n                background-color: $tab-background;\r\n                color: #fff;\r\n                box-shadow: 0 3px 5px $shadow-base-color;\r\n                z-index: 2;\r\n                height: 50px;\r\n                border-radius: 25px;\r\n                top: -4px;\r\n            }\r\n        }\r\n\r\n        .da-tab-slider {\r\n            position: absolute;\r\n            cursor: pointer;\r\n            top: 0;\r\n            bottom: 0;\r\n            height: 42px;\r\n            width: 100%;\r\n            color: $t1-base-color;\r\n            border-radius: 21px;\r\n            z-index: 1;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-around;\r\n            -webkit-transition: 0.4s;\r\n            transition: 0.4s;\r\n\r\n            &:before {\r\n                position: absolute;\r\n                content: \"\";\r\n                height: 42px;\r\n                width: 100%;\r\n                border-radius: 21px;\r\n                -webkit-transition: 0.4s;\r\n                transition: 0.4s;\r\n            }\r\n\r\n            .da-tab-label {\r\n                position: relative;\r\n                white-space: nowrap;\r\n                pointer-events: none;\r\n                z-index: 1;\r\n            }\r\n    \r\n            .da-tab-state {\r\n                background-color: $attention-color;\r\n                width: 14px;\r\n                height: 14px;\r\n                border-radius: 7px;\r\n                box-shadow: 0 -1px 5px $shadow-base-color;\r\n                position: absolute;\r\n                bottom: -7px;\r\n                // right: 20px;\r\n\r\n                &.success {\r\n                    background-color: $success-color;\r\n                }\r\n\r\n                &.error {\r\n                    background-color: $warning-base-color;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n",
                    "styleUrl": "./toggle-tristate.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"da-toggle-tristate\">\r\n    <label class=\"da-tab\" *ngFor=\"let tab of tabs; let num = index\">\r\n        <input \r\n            type=\"radio\" \r\n            (change)=\"getValue($event)\" \r\n            [name]=\"tab.name\" \r\n            [checked]=\"tab.checked\"\r\n            [value]=\"tab.value\"\r\n        >\r\n        <div class=\"da-tab-slider\">\r\n            <span class=\"da-tab-label\">{{tab.label}}</span>\r\n            <span class=\"da-tab-state\" [ngClass]=\"tab.state === 'success' ? 'success' : tab.state === 'error' ? 'error' : 'warning'\"></span>\r\n        </div>\r\n    </label>\r\n</div>\r\n\r\n"
        },
        {
            "name": "ToggleVerticalComponent",
            "id": "component-ToggleVerticalComponent-2846c5df95608dcd8a3c374b8bf6b4f4161fca5e480f73c2e3deee9328913bb336718a390f9bc84f7373fa2b0f9874ce44a8c67c367d9a8df797982755441434",
            "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-toggle-vertical",
            "styleUrls": [
                "./toggle-vertical.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toggle-vertical.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "inputDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "localValue",
                    "defaultValue": "'localValue'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "multiLine",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "switchValue",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getCheckedOption",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n@Component({\r\n  selector: 'lib-toggle-vertical',\r\n  templateUrl: './toggle-vertical.component.html',\r\n  styleUrls: ['./toggle-vertical.component.scss']\r\n})\r\nexport class ToggleVerticalComponent {\r\n  @Input() name: string = 'name';\r\n  @Input() options: any;\r\n  @Input() light: boolean = false;\r\n  @Input() inputDisabled: boolean = false;\r\n  @Input() multiLine: boolean = false;\r\n  @Input() localValue: string = 'localValue';\r\n\r\n  @Output() public switchValue:EventEmitter<any> = new EventEmitter<string>();\r\n  \r\n  constructor() {}\r\n\r\n  getCheckedOption(value: string) {\r\n    return this.localValue === value;\r\n  }\r\n\r\n  sendValue(e: any) {\r\n    this.localValue = e;\r\n    this.switchValue.emit(e.srcElement.value);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\";  \r\n\r\n.da-toggle-vertical {\r\n    font-family: $font;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 200px;\r\n    overflow: hidden;\r\n    flex-direction: column;\r\n    border-radius: 21px;\r\n    background-color: #fff;\r\n    box-shadow: 0 3px 5px $shadow-base-color;\r\n\r\n    &.light {\r\n        box-shadow: 0 3px 5px $shadow-secondary-color;\r\n    }\r\n\r\n    .da-switch {\r\n        position: relative;\r\n        display: flex;\r\n        flex-direction: column;\r\n        cursor: pointer;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        border-radius: 21px;\r\n        width: 200px;\r\n        height: 42px;\r\n        -webkit-transition: 0.4s;\r\n        transition: 0.4s;\r\n\r\n        &.disabled {\r\n            cursor: default;\r\n        }\r\n        &.auto-height {\r\n            min-height: 42px;\r\n            height: auto;\r\n        }\r\n\r\n        input {\r\n            opacity: 0;\r\n            width: 0;\r\n            height: 0;\r\n\r\n            &:checked + .da-switch-slider {\r\n                background-color: $success-color;\r\n                color: #fff;\r\n                fill: #fff;\r\n                box-shadow: 0 3px 5px $shadow-base-color;\r\n                z-index: 2;\r\n            }\r\n\r\n            &:checked + .da-switch-slider.light {\r\n                box-shadow: 0 3px 5px $shadow-secondary-color;\r\n            }\r\n\r\n            &:checked + .da-switch-slider.disabled {\r\n                background-color: $header-base-color;\r\n                color: $t1-base-color;\r\n                fill: $t1-base-color;\r\n            }\r\n\r\n        }\r\n\r\n        .da-switch-label {\r\n            position: relative;\r\n            white-space: nowrap;\r\n            pointer-events: none;\r\n            left: 20px;\r\n            width: calc(100% - 60px);\r\n            z-index: 1;\r\n        }\r\n        .da-switch-icon {\r\n            font-size: 1.5rem;\r\n            z-index: 1;\r\n            color: #fff;\r\n            fill: #fff;\r\n            margin-right: 10px;\r\n            margin-top: 5px;\r\n            pointer-events: none;\r\n        }\r\n\r\n        .da-switch-slider {\r\n            position: relative;\r\n            cursor: pointer;\r\n            margin-top: -3px;\r\n            bottom: 0;\r\n            height: 42px;\r\n            width: 100%;\r\n            color: $t1-base-color;\r\n            fill: $t1-base-color;\r\n            border-radius: 21px;\r\n            z-index: 1;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            -webkit-transition: 0.4s;\r\n            transition: 0.4s;\r\n\r\n            &.top:hover {\r\n                background-color: #ccc;\r\n                box-shadow: 0 3px 5px $shadow-base-color;\r\n                color: #fff;\r\n                fill: #fff;\r\n            }\r\n\r\n            &.disabled {\r\n                cursor: auto;\r\n                pointer-events: none;\r\n            }\r\n\r\n            &.auto-height {\r\n                min-height: 42px;\r\n                height: auto;\r\n\r\n                .da-switch-label {\r\n                    white-space: normal;\r\n                    display: block;\r\n                    padding: 10px 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n",
                    "styleUrl": "./toggle-vertical.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "templateData": "<div class=\"da-toggle-vertical\" [ngClass]=\"{'light' : light, 'auto-height' : multiLine}\">\r\n    <ng-container *ngFor=\"let option of options; let num = index\">\r\n        <label class=\"da-switch top\" [ngClass]=\"{'auto-height' : multiLine, 'disabled': inputDisabled}\">\r\n            <input \r\n                type=\"radio\" \r\n                (change)=\"sendValue($event)\" \r\n                [name]=\"name\" \r\n                [disabled]=\"inputDisabled\"\r\n                [value]=\"option.value\"\r\n                [checked]=\"getCheckedOption(option.value)\"\r\n            >\r\n            <div class=\"da-switch-slider top\" \r\n                 [ngClass]=\"{'light' : light, \r\n                             'auto-height' : multiLine, \r\n                             'disabled': inputDisabled}\">\r\n                <div class=\"da-switch-label\">{{option.label}}</div>\r\n                <svg-icon *ngIf=\"!inputDisabled\" class=\"da-switch-icon\" src=\"assets/images/circleCheck.svg\"></svg-icon>\r\n            </div>\r\n        </label>\r\n    </ng-container>\r\n</div>\r\n\r\n"
        },
        {
            "name": "TooltipComponent",
            "id": "component-TooltipComponent-af8e3b0e5a50a2be4a7ef18e550585acd726ee37f53218465fe3c42be037cd331ab8b8547d7f657f926a18a733e711e6198111f959f0483f4627ff5f331877d5",
            "file": "projects/fm-library/src/lib/info/tooltip/tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-tooltip",
            "styleUrls": [
                "./tooltip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tooltip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autoWidth",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'assets/images/circleExclamation.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "light",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-tooltip',\r\n  templateUrl: './tooltip.component.html',\r\n  styleUrls: ['./tooltip.component.scss']\r\n})\r\nexport class TooltipComponent implements OnInit {\r\n  @Input() text: string = '';\r\n  @Input() icon: string = 'assets/images/circleExclamation.svg';\r\n  @Input() autoWidth: boolean = false;\r\n  @Input() light: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles.scss\"; \r\n.da-tooltip {\r\n    background-color: $button-base-color;\r\n    font-size: $t1-base-size;\r\n    font-family: $font;\r\n    color: $t1-secondary-color;\r\n    max-width: 185px;\r\n    position: absolute;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    display: flex;\r\n    z-index: 3;\r\n    margin-top: 15px;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    &.light {\r\n        color: $t1-base-color;\r\n        background-color: $button-secondary-color;\r\n        box-shadow: 0 3px 5px $shadow-base-color;\r\n    }\r\n\r\n    &.auto-width {\r\n        max-width: auto;\r\n    }\r\n\r\n.da-tooltip-arrow {\r\n    width: 20px;\r\n    height: 20px;\r\n    position: absolute;\r\n    top: -20px;\r\n    left: 20px;\r\n\r\n    .da-arrow-up {\r\n        width: 0; \r\n        height: 0; \r\n        border-left: 20px solid transparent;\r\n        border-right: 20px solid transparent;\r\n        border-bottom: 20px solid $button-base-color;\r\n\r\n        &.light {\r\n            border-bottom: 20px solid $button-secondary-color;\r\n        }\r\n      }\r\n}\r\n\r\n.da-tooltip-icon-wrapper {\r\n    background: transparent;\r\n    border-radius: 20px;\r\n    position: relative;\r\n    margin-right: 20px;\r\n    box-shadow: 0 3px 5px $shadow-base-color;\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    .da-tooltip-icon {\r\n        fill: $t1-secondary-color;\r\n        font-size: 20px;\r\n    }\r\n\r\n    &.light {\r\n        background: #fff;\r\n\r\n        .da-tooltip-icon {\r\n            fill: $t1-base-color;\r\n        }\r\n    }\r\n}\r\n}",
                    "styleUrl": "./tooltip.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"da-tooltip\" [ngClass]=\"{'light' : light, 'auto-width' : autoWidth}\">\r\n    <div class=\"da-tooltip-arrow\">\r\n        <div class=\"da-arrow-up\" [ngClass]=\"{'light' : light}\"></div>\r\n    </div>\r\n    <div class=\"da-tooltip-icon-wrapper\" [ngClass]=\"{'light' : light}\">\r\n        <svg-icon class=\"da-tooltip-icon\" [src]=\"icon\"></svg-icon>\r\n    </div>\r\n    <span>{{text}}</span>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "FmLibraryModule",
            "id": "module-FmLibraryModule-e519adf18366d023b0c4b81df26db4b2616f1edc8b5bbdd384102d7db39979807afad54b9fb21271779fe4d9afa7707fca743455904fa304aff645bf40324663",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/fm-library/src/lib/fm-library.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { StarRatingModule } from 'angular-star-rating';\r\nimport { AngularSvgIconModule } from 'angular-svg-icon';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ButtonComponent } from './buttons/button/button.component';\r\nimport { ButtonGroupComponent } from './buttons/button-group/button-group.component';\r\nimport { InfoButtonComponent } from './buttons/info-button/info-button.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { DropdownComponent } from './inputs/dropdown/dropdown.component';\r\nimport { InputComponent } from './inputs/input/input.component';\r\nimport { InputButtonComponent } from './inputs/input-button/input-button.component';\r\nimport { InputDateComponent } from './inputs/input-date/input-date.component';\r\nimport { TileComponent } from './tiles/tile/tile.component';\r\nimport { TileCheckboxComponent } from './tiles/tile-checkbox/tile-checkbox.component';\r\nimport { TileCheckboxGroupComponent } from './tiles/tile-checkbox-group/tile-checkbox-group.component';\r\nimport { TileGroupComponent } from './tiles/tile-group/tile-group.component';\r\nimport { TileRatingComponent } from './tiles/tile-rating/tile-rating.component';\r\nimport { ToggleComponent } from './toggle/toggle/toggle.component';\r\nimport { ToggleVerticalComponent } from './toggle/toggle-vertical/toggle-vertical.component';\r\nimport { ToggleHorizontalComponent } from './toggle/toggle-horizontal/toggle-horizontal.component';\r\nimport { ToggleCheckboxComponent } from './toggle/toggle-checkbox/toggle-checkbox.component';\r\nimport { ToggleTristateComponent } from './toggle/toggle-tristate/toggle-tristate.component';\r\nimport { TileTextComponent } from './text/tile-text/tile-text.component';\r\nimport { HeaderTextComponent } from './text/header-text/header-text.component';\r\nimport { HeaderButtonComponent } from './buttons/header-button/header-button.component';\r\nimport { ProgressButtonComponent } from './buttons/progress-button/progress-button.component';\r\nimport { StateIconComponent } from './icons/state-icon/state-icon.component';\r\nimport { TooltipComponent } from './info/tooltip/tooltip.component';\r\nimport { TextAreaComponent } from './inputs/text-area/text-area.component';\r\n@NgModule({\r\n  declarations: [\r\n    ButtonComponent,\r\n    ButtonGroupComponent,\r\n    InfoButtonComponent,\r\n    CounterComponent,\r\n    DropdownComponent,\r\n    InputComponent,\r\n    InputButtonComponent,\r\n    InputDateComponent,\r\n    TileComponent,\r\n    TileCheckboxComponent,\r\n    TileCheckboxGroupComponent,\r\n    TileGroupComponent,\r\n    TileRatingComponent,\r\n    ToggleComponent,\r\n    ToggleVerticalComponent,\r\n    ToggleCheckboxComponent,\r\n    ToggleTristateComponent,\r\n    TileTextComponent,\r\n    HeaderTextComponent,\r\n    HeaderButtonComponent,\r\n    ProgressButtonComponent,\r\n    StateIconComponent,\r\n    TooltipComponent,\r\n    ToggleHorizontalComponent,\r\n    TextAreaComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FontAwesomeModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule, \r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    NgbTooltipModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    StarRatingModule.forRoot(),\r\n    AngularSvgIconModule.forRoot(),\r\n  ],\r\n  exports: [\r\n    ButtonComponent,\r\n    ButtonGroupComponent,\r\n    InfoButtonComponent,\r\n    CounterComponent,\r\n    DropdownComponent,\r\n    InputComponent,\r\n    InputButtonComponent,\r\n    InputDateComponent,\r\n    TileComponent,\r\n    TileCheckboxComponent,\r\n    TileCheckboxGroupComponent,\r\n    TileGroupComponent,\r\n    TileRatingComponent,\r\n    ToggleComponent,\r\n    ToggleVerticalComponent,\r\n    ToggleHorizontalComponent,\r\n    ToggleCheckboxComponent,\r\n    ToggleTristateComponent,\r\n    TileTextComponent,\r\n    HeaderTextComponent,\r\n    HeaderButtonComponent,\r\n    ProgressButtonComponent,\r\n    StateIconComponent,\r\n    TooltipComponent,\r\n    TextAreaComponent\r\n  ]\r\n})\r\nexport class FmLibraryModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ButtonGroupComponent"
                        },
                        {
                            "name": "CounterComponent"
                        },
                        {
                            "name": "DropdownComponent"
                        },
                        {
                            "name": "HeaderButtonComponent"
                        },
                        {
                            "name": "HeaderTextComponent"
                        },
                        {
                            "name": "InfoButtonComponent"
                        },
                        {
                            "name": "InputButtonComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "InputDateComponent"
                        },
                        {
                            "name": "ProgressButtonComponent"
                        },
                        {
                            "name": "StateIconComponent"
                        },
                        {
                            "name": "TextAreaComponent"
                        },
                        {
                            "name": "TileCheckboxComponent"
                        },
                        {
                            "name": "TileCheckboxGroupComponent"
                        },
                        {
                            "name": "TileComponent"
                        },
                        {
                            "name": "TileGroupComponent"
                        },
                        {
                            "name": "TileRatingComponent"
                        },
                        {
                            "name": "TileTextComponent"
                        },
                        {
                            "name": "ToggleCheckboxComponent"
                        },
                        {
                            "name": "ToggleComponent"
                        },
                        {
                            "name": "ToggleHorizontalComponent"
                        },
                        {
                            "name": "ToggleTristateComponent"
                        },
                        {
                            "name": "ToggleVerticalComponent"
                        },
                        {
                            "name": "TooltipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ButtonGroupComponent"
                        },
                        {
                            "name": "CounterComponent"
                        },
                        {
                            "name": "DropdownComponent"
                        },
                        {
                            "name": "HeaderButtonComponent"
                        },
                        {
                            "name": "HeaderTextComponent"
                        },
                        {
                            "name": "InfoButtonComponent"
                        },
                        {
                            "name": "InputButtonComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "InputDateComponent"
                        },
                        {
                            "name": "ProgressButtonComponent"
                        },
                        {
                            "name": "StateIconComponent"
                        },
                        {
                            "name": "TextAreaComponent"
                        },
                        {
                            "name": "TileCheckboxComponent"
                        },
                        {
                            "name": "TileCheckboxGroupComponent"
                        },
                        {
                            "name": "TileComponent"
                        },
                        {
                            "name": "TileGroupComponent"
                        },
                        {
                            "name": "TileRatingComponent"
                        },
                        {
                            "name": "TileTextComponent"
                        },
                        {
                            "name": "ToggleCheckboxComponent"
                        },
                        {
                            "name": "ToggleComponent"
                        },
                        {
                            "name": "ToggleHorizontalComponent"
                        },
                        {
                            "name": "ToggleTristateComponent"
                        },
                        {
                            "name": "ToggleVerticalComponent"
                        },
                        {
                            "name": "TooltipComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Active",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 'active button',\r\n    active: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "customWidth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 'weiter',\r\n    width: '200',\r\n    iconRight: 'assets/images/chevronRight.svg',\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/counter/counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    placeholder: '0',\r\n    value: 0,\r\n    step: 1,\r\n    min: 0,\r\n    max: 10,\r\n    name: 'name',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'die Headline',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'der Text',\r\n    light: true,\r\n    size: '16px',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label1: 'Ja',\r\n    label2: 'Nein',\r\n    value1: 'true',\r\n    value2: 'false',\r\n    name: 'name',\r\n    localValue: 'true',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-checkbox/toggle-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    checked: true,\r\n    light: true,\r\n    dynLabelClassName: 'dynamic-class'\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: testOptions3,\r\n    localValue: '',\r\n    name: 'name',\r\n    light: true,\r\n    elementWidth: '100px',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: testOptions2,\r\n    localValue: '',\r\n    name: 'name',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Dashboard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'button label',\r\n    icon: 'assets/images/barsProgress.svg',\r\n    state: 'closed',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/counter/counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    placeholder: '0',\r\n    value: 0,\r\n    step: 1,\r\n    min: 0,\r\n    max: 10,\r\n    name: 'name',\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button-group/button-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    buttons: testButtons,\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 'button label',\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 'button label',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Stellplätze',\r\n    icon: 'assets/images/parking.svg',\r\n    state: 'success',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/info-button/info-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    light: false,\r\n    id: 'the-info',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/info/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    text: 'Der Info text',\r\n    icon: 'assets/images/circleInfo.svg',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'das Label',\r\n    light: false,\r\n    icon: 'assets/images/circleCheck.svg',\r\n    selectedItem: placeholderTest,\r\n    selectItems: testItems,\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.200,00',\r\n    unit: '€',\r\n    touched: true,\r\n    light: false,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    textAlign: 'left',\r\n    skinnyLabel: true,\r\n    customBackground: 'rgb(255, 255, 255)',\r\n    customBorder: 'rgb(32, 56, 100)',\r\n    customBoxShadow: 'rgba(32, 56, 100, 0.5)'\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: false,\r\n    placeholder: 'tt.mm.jjjj',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: '',\r\n    placeholder: 'placeholder text',\r\n    label: 'label'\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/tiles/tile-checkbox/tile-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    image: 'assets/images/signal-bars-poor.svg',\r\n    checked: false,\r\n    name: 'name',\r\n    value: 'the value',\r\n    state: 'success',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/tiles/tile-checkbox-group/tile-checkbox-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    tiles: testTiles\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/tiles/tile-group/tile-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    tiles: testTiles\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'die Headline',\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'der Text',\r\n    light: false,\r\n    size: '16px',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label1: 'Ja',\r\n    label2: 'Nein',\r\n    value1: 'true',\r\n    value2: 'false',\r\n    name: 'name',\r\n    localValue: '',\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-checkbox/toggle-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    checked: true,\r\n    light: false,\r\n    dynLabelClassName: 'dynamic-class'\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: testOptions3,\r\n    localValue: '',\r\n    name: 'name',\r\n    light: false,\r\n    elementWidth: '100px',\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    tabs: testTabsThree\r\n  },\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: testOptions2,\r\n    localValue: '',\r\n    name: 'name',\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "Default4Stars",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/tiles/tile-rating/tile-rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'name',\r\n    stars: 4,\r\n    info: 'rating-info',\r\n  },\r\n}"
            },
            {
                "name": "Default5Stars",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/tiles/tile-rating/tile-rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'name',\r\n    stars: 5,\r\n    info: 'info-rating-dark',\r\n  },\r\n}"
            },
            {
                "name": "DefaultDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button-group/button-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    buttons: testButtons,\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "DefaultDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 'button label',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "DefaultDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/info-button/info-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "DefaultDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/info/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    text: 'Der Infotext',\r\n    light: true,\r\n    icon: 'assets/images/circleInfo.svg',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "DefaultDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'das Label',\r\n    light: true,\r\n    icon: 'assets/images/circleCheck.svg',\r\n    selectItems: testItems,\r\n    selectedItem: placeholderTest,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "DefaultDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.200,00',\r\n    unit: '€',\r\n    touched: true,\r\n    light: true,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "DefaultDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: false,\r\n    error: false,\r\n    light: true,\r\n    errorText: 'die Fehlermeldung',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n    textAlign: 'left',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "DefaultDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: true,\r\n    placeholder: 'tt.mm.jjjj',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "DefaultDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    value: '',\r\n    light: true,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: 'the value',\r\n    touched: true,\r\n    inputDisabled: true,\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: 'ganz langer Text, zum Beispiel Anschlussfinanzierung',\r\n    type: 'text',\r\n    inputDisabled: true,\r\n  },\r\n}"
            },
            {
                "name": "disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: 'der Text',\r\n    inputDisabled: true,\r\n    touched: true,\r\n  },\r\n}"
            },
            {
                "name": "disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: testOptions2,\r\n    localValue: 'value2',\r\n    inputDisabled: true,\r\n    name: 'name',\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 'disabled button',\r\n    disabled: true,\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 'disabled button',\r\n    disabled: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'disabled',\r\n    disabled: true,\r\n    icon: 'assets/images/user.svg',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "DisabledDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 'disabled button',\r\n    disabled: true,\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Ende",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Info',\r\n    icon: 'assets/images/circleExclamation.svg',\r\n    state: 'end',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: 'falscher input',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: true,\r\n    error: true,\r\n    light: false,\r\n    errorText: 'die Fehlermeldung',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
            },
            {
                "name": "error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: false,\r\n    placeholder: 'tt.mm.jjjj',\r\n    value: new Date(),\r\n    touched: true,\r\n    error: true,\r\n    errorText: 'die Fehlermeldung',\r\n  },\r\n}"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    state: 'error',\r\n  },\r\n}"
            },
            {
                "name": "errorDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: 'falscher input',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: true,\r\n    error: true,\r\n    light: true,\r\n    errorText: 'die Fehlermeldung',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "errorDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: true,\r\n    placeholder: 'tt.mm.jjjj',\r\n    value: new Date(),\r\n    touched: true,\r\n    error: true,\r\n    errorText: 'die Fehlermeldung',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "FiveOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: testOptions5,\r\n    localValue: '',\r\n    name: 'name',\r\n    light: false,\r\n    elementWidth: '100px',\r\n  },\r\n}"
            },
            {
                "name": "FiveOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: testOptions5,\r\n    localValue: '',\r\n    name: 'name',\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Fortschritt speichern',\r\n    iconButton: true,\r\n    icon: 'assets/images/diskSave.svg',\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    icon: 'assets/images/user.svg',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "IconDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Fortschritt speichern',\r\n    iconButton: true,\r\n    icon: 'assets/images/diskSave.svg',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "IconLeft",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 'zurück',\r\n    iconLeft: 'assets/images/chevronLeft.svg',\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "IconLeftDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 'zurück',\r\n    iconLeft: 'assets/images/chevronLeft.svg',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "IconRight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 'weiter',\r\n    iconRight: 'assets/images/chevronRight.svg',\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "IconRightDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 'weiter',\r\n    iconRight: 'assets/images/chevronRight.svg',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Inactive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    value: 'inactive button',\r\n    inactive: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "multiLine",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    options: testOptions3,\r\n    multiLine: true,\r\n    name: 'name',\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "multipleRows",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    multiLine: true,\r\n    value: 'ganz langer Text, <br> zum Beispiel Anschlussfinanzierung. Kann auch <a href=\"#\">links</a> enthalten.',\r\n  },\r\n}"
            },
            {
                "name": "multipleRowsTouched",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    touched: true,\r\n    multiLine: true,\r\n    value: 'ganz langer Text, <br> zum Beispiel Anschlussfinanzierung. Kann auch <a href=\"#\">links</a> enthalten.',\r\n  },\r\n}"
            },
            {
                "name": "noValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    touched: false,\r\n    light: false,\r\n  },\r\n}"
            },
            {
                "name": "Optional",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    state: 'optional',\r\n  },\r\n}"
            },
            {
                "name": "placeholderTest",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    'value': 'value0',\r\n    'viewValue': 'Placeholder'\r\n  }"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    layout: 'centered',\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n    backgrounds: {\r\n      default: 'hell',\r\n      values: [\r\n        {\r\n          name: 'hell',\r\n          value: '#C0D1E1',\r\n        },\r\n        {\r\n          name: 'dunkel',\r\n          value: '#203864',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "short",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '90',\r\n    unit: '%',\r\n    touched: true,\r\n    short: true,\r\n    light: false,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
            },
            {
                "name": "shortDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '90',\r\n    unit: '%',\r\n    touched: true,\r\n    short: true,\r\n    light: true,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.100,00',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: true,\r\n    error: false,\r\n    light: false,\r\n    errorText: 'die Fehlermeldung',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    state: 'success',\r\n  },\r\n}"
            },
            {
                "name": "successDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.100,00',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: true,\r\n    error: false,\r\n    light: true,\r\n    errorText: 'die Fehlermeldung',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "testButtons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/buttons/button-group/button-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    'iconLeft': 'assets/images/chevronLeft.svg',\r\n    'value': 'zurück',\r\n    'type': 'back'\r\n  },\r\n  {\r\n    'label': 'Fortschritt speichern',\r\n    'iconButton': true,\r\n    'icon': 'assets/images/diskSave.svg',\r\n    'type': 'save',\r\n  },\r\n  {\r\n    'iconRight': 'assets/images/chevronRight.svg',\r\n    'value': 'weiter',\r\n    'type': 'next',\r\n    'disabled': true,\r\n  }\r\n]"
            },
            {
                "name": "testItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    'value': 'value1',\r\n    'viewValue': 'Option 1'\r\n  },\r\n  {\r\n    'value': 'value2',\r\n    'viewValue': 'Option 2'\r\n  },\r\n  {\r\n    'value': 'value3',\r\n    'viewValue': 'Option 3'\r\n  },\r\n  {\r\n    'value': 'value4',\r\n    'viewValue': 'Option 4'\r\n  },\r\n  {\r\n    'value': 'value5',\r\n    'viewValue': 'Option 5'\r\n  },\r\n  {\r\n    'value': 'value6',\r\n    'viewValue': 'Option 6'\r\n  }\r\n]"
            },
            {
                "name": "testOptions2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'label2',\r\n    'value': 'value2'\r\n  }\r\n]"
            },
            {
                "name": "testOptions3",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'label2',\r\n    'value': 'value2'\r\n  },\r\n  {\r\n    'label': 'label3',\r\n    'value': 'value3'\r\n  }\r\n]"
            },
            {
                "name": "testOptions3",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'Grundstück wird für das Neubauvorhaben verwendet',\r\n    'value': 'value2'\r\n  }\r\n]"
            },
            {
                "name": "testOptions5",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'label2',\r\n    'value': 'value2'\r\n  },\r\n  {\r\n    'label': 'label3',\r\n    'value': 'value3'\r\n  },\r\n  {\r\n    'label': 'label4',\r\n    'value': 'value4'\r\n  },\r\n  {\r\n    'label': 'label5',\r\n    'value': 'value5'\r\n  }\r\n]"
            },
            {
                "name": "testOptions5",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'label2',\r\n    'value': 'value2'\r\n  },\r\n  {\r\n    'label': 'label3',\r\n    'value': 'value3'\r\n  },\r\n  {\r\n    'label': 'label4',\r\n    'value': 'value4'\r\n  },\r\n  {\r\n    'label': 'label5',\r\n    'value': 'value5'\r\n  }\r\n]"
            },
            {
                "name": "testTabsThree",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    'label': 'N° 1',\r\n    'name': 'name',\r\n    'state': 'success',\r\n    'value': 'value1',\r\n    'checked': true\r\n  },\r\n  {\r\n    'label': 'N° 2',\r\n    'name': 'name',\r\n    'value': 'value2',\r\n    'checked': false\r\n  },\r\n  {\r\n    'label': 'N° 3',\r\n    'name': 'name',\r\n    'state': 'success',\r\n    'value': 'value3',\r\n    'checked': false\r\n  }\r\n]"
            },
            {
                "name": "testTabsTwo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    'label': 'N° 1',\r\n    'name': 'name',\r\n    'state': 'error',\r\n    'value': 'value1',\r\n    'checked': true\r\n  },\r\n  {\r\n    'label': 'N° 2',\r\n    'name': 'name',\r\n    'value': 'value2',\r\n    'checked': false\r\n  }\r\n]"
            },
            {
                "name": "testTiles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/tiles/tile-checkbox-group/tile-checkbox-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'name': 'name',\r\n    'state': 'success',\r\n    'checked': false,\r\n    'image': 'assets/images/houseCheckmark.svg',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'label2',\r\n    'name': 'name',\r\n    'state': 'warning',\r\n    'checked': false,\r\n    'image': 'assets/images/houseFlag.svg',\r\n    'value': 'value2'\r\n  },\r\n  {\r\n    'label': 'label3',\r\n    'name': 'name',\r\n    'state': 'error',\r\n    'checked': false,\r\n    'image': 'assets/images/houseTree.svg',\r\n    'value': 'value3'\r\n  }\r\n]"
            },
            {
                "name": "testTiles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/tiles/tile-group/tile-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'name': 'name',\r\n    'state': 'success',\r\n    'checked': false,\r\n    'image': 'assets/images/houseCheckmark.svg',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'label2',\r\n    'name': 'name',\r\n    'state': 'warning',\r\n    'checked': false,\r\n    'image': 'assets/images/houseFlag.svg',\r\n    'value': 'value2'\r\n  },\r\n  {\r\n    'label': 'label3',\r\n    'name': 'name',\r\n    'state': 'error',\r\n    'checked': false,\r\n    'image': 'assets/images/houseTree.svg',\r\n    'value': 'value3'\r\n  }\r\n]"
            },
            {
                "name": "TwoTabs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    tabs: testTabsTwo\r\n  },\r\n}"
            },
            {
                "name": "warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.200,00',\r\n    unit: '€',\r\n    touched: false,\r\n    light: false,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    state: 'warning',\r\n  },\r\n}"
            },
            {
                "name": "warningDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.200,00',\r\n    unit: '€',\r\n    touched: false,\r\n    light: true,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "withInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.200,00',\r\n    unit: '€',\r\n    touched: true,\r\n    light: false,\r\n    info: 'test-info',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
            },
            {
                "name": "withInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: false,\r\n    error: false,\r\n    light: false,\r\n    errorText: 'die Fehlermeldung',\r\n    info: 'test-info',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
            },
            {
                "name": "withInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    light: false,\r\n    value: 'Input kann auch <a href=\"#\">links</a.',\r\n    info: 'test-info',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
            },
            {
                "name": "WithInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'das Label',\r\n    light: false,\r\n    icon: 'assets/images/circleCheck.svg',\r\n    selectItems: testItems,\r\n    selectedItem: placeholderTest,\r\n    info: 'dropdown-info',\r\n  },\r\n}"
            },
            {
                "name": "WithInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: false,\r\n    placeholder: 'tt.mm.jjjj',\r\n    info: 'date-info',\r\n  },\r\n}"
            },
            {
                "name": "WithInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'die Headline',\r\n    light: false,\r\n    info: 'text-info',\r\n  },\r\n}"
            },
            {
                "name": "WithInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'der Text',\r\n    light: false,\r\n    info: 'text-info',\r\n    size: '16px',\r\n  },\r\n}"
            },
            {
                "name": "withInfoDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.200,00',\r\n    unit: '€',\r\n    touched: true,\r\n    light: true,\r\n    info: 'test-info',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "withInfoDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: false,\r\n    error: false,\r\n    light: true,\r\n    errorText: 'die Fehlermeldung',\r\n    info: 'test-info-dark',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "withInfoDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    value: '',\r\n    light: true,\r\n    info: 'test-info-dark',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "WithInfoDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'das Label',\r\n    light: true,\r\n    icon: 'assets/images/circleCheck.svg',\r\n    selectItems: testItems,\r\n    selectedItem: placeholderTest,\r\n    info: 'dropdown-info-dark',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "WithInfoDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: true,\r\n    placeholder: 'tt.mm.jjjj',\r\n    info: 'date-info-dark',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "WithInfoDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'die Headline',\r\n    light: true,\r\n    info: 'text-info-dark',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "WithInfoDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'der Text',\r\n    light: true,\r\n    info: 'text-info-dark',\r\n    size: '16px',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "WithMaxDate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: false,\r\n    placeholder: 'tt.mm.jjjj',\r\n    maxDate: new Date(),\r\n  },\r\n}"
            },
            {
                "name": "WithSelectedDate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: false,\r\n    placeholder: 'tt.mm.jjjj',\r\n    value: new Date(),\r\n  },\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CounterComponent>",
                "file": "projects/fm-library/src/lib/counter/counter.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonGroupComponent>",
                "file": "projects/fm-library/src/lib/buttons/button-group/button-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderButtonComponent>",
                "file": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProgressButtonComponent>",
                "file": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StateIconComponent>",
                "file": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InfoButtonComponent>",
                "file": "projects/fm-library/src/lib/buttons/info-button/info-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TooltipComponent>",
                "file": "projects/fm-library/src/lib/info/tooltip/tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DropdownComponent>",
                "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputButtonComponent>",
                "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputDateComponent>",
                "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TextAreaComponent>",
                "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TileCheckboxComponent>",
                "file": "projects/fm-library/src/lib/tiles/tile-checkbox/tile-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TileCheckboxGroupComponent>",
                "file": "projects/fm-library/src/lib/tiles/tile-checkbox-group/tile-checkbox-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TileGroupComponent>",
                "file": "projects/fm-library/src/lib/tiles/tile-group/tile-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TileRatingComponent>",
                "file": "projects/fm-library/src/lib/tiles/tile-rating/tile-rating.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderTextComponent>",
                "file": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TileTextComponent>",
                "file": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToggleComponent>",
                "file": "projects/fm-library/src/lib/toggle/toggle/toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToggleCheckboxComponent>",
                "file": "projects/fm-library/src/lib/toggle/toggle-checkbox/toggle-checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToggleHorizontalComponent>",
                "file": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToggleTristateComponent>",
                "file": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToggleVerticalComponent>",
                "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts": [
                {
                    "name": "Active",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 'active button',\r\n    active: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 'button label',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 'disabled button',\r\n    disabled: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    icon: 'assets/images/user.svg',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Inactive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 'inactive button',\r\n    inactive: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/buttons/button/button.stories.ts": [
                {
                    "name": "customWidth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 'weiter',\r\n    width: '200',\r\n    iconRight: 'assets/images/chevronRight.svg',\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 'button label',\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "DefaultDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 'button label',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 'disabled button',\r\n    disabled: true,\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "DisabledDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 'disabled button',\r\n    disabled: true,\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Fortschritt speichern',\r\n    iconButton: true,\r\n    icon: 'assets/images/diskSave.svg',\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "IconDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Fortschritt speichern',\r\n    iconButton: true,\r\n    icon: 'assets/images/diskSave.svg',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "IconLeft",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 'zurück',\r\n    iconLeft: 'assets/images/chevronLeft.svg',\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "IconLeftDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 'zurück',\r\n    iconLeft: 'assets/images/chevronLeft.svg',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "IconRight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 'weiter',\r\n    iconRight: 'assets/images/chevronRight.svg',\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "IconRightDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: 'weiter',\r\n    iconRight: 'assets/images/chevronRight.svg',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/counter/counter.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/counter/counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    placeholder: '0',\r\n    value: 0,\r\n    step: 1,\r\n    min: 0,\r\n    max: 10,\r\n    name: 'name',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/counter/counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    placeholder: '0',\r\n    value: 0,\r\n    step: 1,\r\n    min: 0,\r\n    max: 10,\r\n    name: 'name',\r\n    light: false,\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/text/header-text/header-text.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'die Headline',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'die Headline',\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "WithInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'die Headline',\r\n    light: false,\r\n    info: 'text-info',\r\n  },\r\n}"
                },
                {
                    "name": "WithInfoDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'die Headline',\r\n    light: true,\r\n    info: 'text-info-dark',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'der Text',\r\n    light: true,\r\n    size: '16px',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'der Text',\r\n    light: false,\r\n    size: '16px',\r\n  },\r\n}"
                },
                {
                    "name": "WithInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'der Text',\r\n    light: false,\r\n    info: 'text-info',\r\n    size: '16px',\r\n  },\r\n}"
                },
                {
                    "name": "WithInfoDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'der Text',\r\n    light: true,\r\n    info: 'text-info-dark',\r\n    size: '16px',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/toggle/toggle/toggle.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label1: 'Ja',\r\n    label2: 'Nein',\r\n    value1: 'true',\r\n    value2: 'false',\r\n    name: 'name',\r\n    localValue: 'true',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label1: 'Ja',\r\n    label2: 'Nein',\r\n    value1: 'true',\r\n    value2: 'false',\r\n    name: 'name',\r\n    localValue: '',\r\n    light: false,\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/toggle/toggle-checkbox/toggle-checkbox.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-checkbox/toggle-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    checked: true,\r\n    light: true,\r\n    dynLabelClassName: 'dynamic-class'\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-checkbox/toggle-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    checked: true,\r\n    light: false,\r\n    dynLabelClassName: 'dynamic-class'\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: testOptions3,\r\n    localValue: '',\r\n    name: 'name',\r\n    light: true,\r\n    elementWidth: '100px',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: testOptions3,\r\n    localValue: '',\r\n    name: 'name',\r\n    light: false,\r\n    elementWidth: '100px',\r\n  },\r\n}"
                },
                {
                    "name": "FiveOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: testOptions5,\r\n    localValue: '',\r\n    name: 'name',\r\n    light: false,\r\n    elementWidth: '100px',\r\n  },\r\n}"
                },
                {
                    "name": "testOptions3",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'label2',\r\n    'value': 'value2'\r\n  },\r\n  {\r\n    'label': 'label3',\r\n    'value': 'value3'\r\n  }\r\n]"
                },
                {
                    "name": "testOptions5",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'label2',\r\n    'value': 'value2'\r\n  },\r\n  {\r\n    'label': 'label3',\r\n    'value': 'value3'\r\n  },\r\n  {\r\n    'label': 'label4',\r\n    'value': 'value4'\r\n  },\r\n  {\r\n    'label': 'label5',\r\n    'value': 'value5'\r\n  }\r\n]"
                }
            ],
            "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: testOptions2,\r\n    localValue: '',\r\n    name: 'name',\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: testOptions2,\r\n    localValue: '',\r\n    name: 'name',\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: testOptions2,\r\n    localValue: 'value2',\r\n    inputDisabled: true,\r\n    name: 'name',\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "FiveOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: testOptions5,\r\n    localValue: '',\r\n    name: 'name',\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "multiLine",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    options: testOptions3,\r\n    multiLine: true,\r\n    name: 'name',\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "testOptions2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'label2',\r\n    'value': 'value2'\r\n  }\r\n]"
                },
                {
                    "name": "testOptions3",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'Grundstück wird für das Neubauvorhaben verwendet',\r\n    'value': 'value2'\r\n  }\r\n]"
                },
                {
                    "name": "testOptions5",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'label2',\r\n    'value': 'value2'\r\n  },\r\n  {\r\n    'label': 'label3',\r\n    'value': 'value3'\r\n  },\r\n  {\r\n    'label': 'label4',\r\n    'value': 'value4'\r\n  },\r\n  {\r\n    'label': 'label5',\r\n    'value': 'value5'\r\n  }\r\n]"
                }
            ],
            "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts": [
                {
                    "name": "Dashboard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'button label',\r\n    icon: 'assets/images/barsProgress.svg',\r\n    state: 'closed',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Stellplätze',\r\n    icon: 'assets/images/parking.svg',\r\n    state: 'success',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'disabled',\r\n    disabled: true,\r\n    icon: 'assets/images/user.svg',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Ende",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Info',\r\n    icon: 'assets/images/circleExclamation.svg',\r\n    state: 'end',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'header',\r\n      values: [\r\n        { name: 'header', value: '#DDE7EE' },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/buttons/button-group/button-group.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button-group/button-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    buttons: testButtons,\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "DefaultDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button-group/button-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    buttons: testButtons,\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "testButtons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/button-group/button-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    'iconLeft': 'assets/images/chevronLeft.svg',\r\n    'value': 'zurück',\r\n    'type': 'back'\r\n  },\r\n  {\r\n    'label': 'Fortschritt speichern',\r\n    'iconButton': true,\r\n    'icon': 'assets/images/diskSave.svg',\r\n    'type': 'save',\r\n  },\r\n  {\r\n    'iconRight': 'assets/images/chevronRight.svg',\r\n    'value': 'weiter',\r\n    'type': 'next',\r\n    'disabled': true,\r\n  }\r\n]"
                }
            ],
            "projects/fm-library/src/lib/buttons/info-button/info-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/info-button/info-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    light: false,\r\n    id: 'the-info',\r\n  },\r\n}"
                },
                {
                    "name": "DefaultDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/buttons/info-button/info-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    light: true,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/info/tooltip/tooltip.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/info/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    text: 'Der Info text',\r\n    icon: 'assets/images/circleInfo.svg',\r\n  },\r\n}"
                },
                {
                    "name": "DefaultDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/info/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    text: 'Der Infotext',\r\n    light: true,\r\n    icon: 'assets/images/circleInfo.svg',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'das Label',\r\n    light: false,\r\n    icon: 'assets/images/circleCheck.svg',\r\n    selectedItem: placeholderTest,\r\n    selectItems: testItems,\r\n  },\r\n}"
                },
                {
                    "name": "DefaultDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'das Label',\r\n    light: true,\r\n    icon: 'assets/images/circleCheck.svg',\r\n    selectItems: testItems,\r\n    selectedItem: placeholderTest,\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "placeholderTest",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    'value': 'value0',\r\n    'viewValue': 'Placeholder'\r\n  }"
                },
                {
                    "name": "testItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    'value': 'value1',\r\n    'viewValue': 'Option 1'\r\n  },\r\n  {\r\n    'value': 'value2',\r\n    'viewValue': 'Option 2'\r\n  },\r\n  {\r\n    'value': 'value3',\r\n    'viewValue': 'Option 3'\r\n  },\r\n  {\r\n    'value': 'value4',\r\n    'viewValue': 'Option 4'\r\n  },\r\n  {\r\n    'value': 'value5',\r\n    'viewValue': 'Option 5'\r\n  },\r\n  {\r\n    'value': 'value6',\r\n    'viewValue': 'Option 6'\r\n  }\r\n]"
                },
                {
                    "name": "WithInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'das Label',\r\n    light: false,\r\n    icon: 'assets/images/circleCheck.svg',\r\n    selectItems: testItems,\r\n    selectedItem: placeholderTest,\r\n    info: 'dropdown-info',\r\n  },\r\n}"
                },
                {
                    "name": "WithInfoDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'das Label',\r\n    light: true,\r\n    icon: 'assets/images/circleCheck.svg',\r\n    selectItems: testItems,\r\n    selectedItem: placeholderTest,\r\n    info: 'dropdown-info-dark',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.200,00',\r\n    unit: '€',\r\n    touched: true,\r\n    light: false,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
                },
                {
                    "name": "DefaultDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.200,00',\r\n    unit: '€',\r\n    touched: true,\r\n    light: true,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: 'the value',\r\n    touched: true,\r\n    inputDisabled: true,\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "noValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    touched: false,\r\n    light: false,\r\n  },\r\n}"
                },
                {
                    "name": "short",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '90',\r\n    unit: '%',\r\n    touched: true,\r\n    short: true,\r\n    light: false,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
                },
                {
                    "name": "shortDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '90',\r\n    unit: '%',\r\n    touched: true,\r\n    short: true,\r\n    light: true,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.200,00',\r\n    unit: '€',\r\n    touched: false,\r\n    light: false,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
                },
                {
                    "name": "warningDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.200,00',\r\n    unit: '€',\r\n    touched: false,\r\n    light: true,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "withInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.200,00',\r\n    unit: '€',\r\n    touched: true,\r\n    light: false,\r\n    info: 'test-info',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
                },
                {
                    "name": "withInfoDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.200,00',\r\n    unit: '€',\r\n    touched: true,\r\n    light: true,\r\n    info: 'test-info',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/inputs/input/input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    textAlign: 'left',\r\n    skinnyLabel: true,\r\n    customBackground: 'rgb(255, 255, 255)',\r\n    customBorder: 'rgb(32, 56, 100)',\r\n    customBoxShadow: 'rgba(32, 56, 100, 0.5)'\r\n  },\r\n}"
                },
                {
                    "name": "DefaultDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: false,\r\n    error: false,\r\n    light: true,\r\n    errorText: 'die Fehlermeldung',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n    textAlign: 'left',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: 'ganz langer Text, zum Beispiel Anschlussfinanzierung',\r\n    type: 'text',\r\n    inputDisabled: true,\r\n  },\r\n}"
                },
                {
                    "name": "error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: 'falscher input',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: true,\r\n    error: true,\r\n    light: false,\r\n    errorText: 'die Fehlermeldung',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
                },
                {
                    "name": "errorDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: 'falscher input',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: true,\r\n    error: true,\r\n    light: true,\r\n    errorText: 'die Fehlermeldung',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.100,00',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: true,\r\n    error: false,\r\n    light: false,\r\n    errorText: 'die Fehlermeldung',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
                },
                {
                    "name": "successDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '1.100,00',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: true,\r\n    error: false,\r\n    light: true,\r\n    errorText: 'die Fehlermeldung',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "withInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: false,\r\n    error: false,\r\n    light: false,\r\n    errorText: 'die Fehlermeldung',\r\n    info: 'test-info',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
                },
                {
                    "name": "withInfoDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: '',\r\n    type: 'text',\r\n    placeholder: '0,00',\r\n    unit: '€',\r\n    touched: false,\r\n    error: false,\r\n    light: true,\r\n    errorText: 'die Fehlermeldung',\r\n    info: 'test-info-dark',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: false,\r\n    placeholder: 'tt.mm.jjjj',\r\n  },\r\n}"
                },
                {
                    "name": "DefaultDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: true,\r\n    placeholder: 'tt.mm.jjjj',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: false,\r\n    placeholder: 'tt.mm.jjjj',\r\n    value: new Date(),\r\n    touched: true,\r\n    error: true,\r\n    errorText: 'die Fehlermeldung',\r\n  },\r\n}"
                },
                {
                    "name": "errorDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: true,\r\n    placeholder: 'tt.mm.jjjj',\r\n    value: new Date(),\r\n    touched: true,\r\n    error: true,\r\n    errorText: 'die Fehlermeldung',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "WithInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: false,\r\n    placeholder: 'tt.mm.jjjj',\r\n    info: 'date-info',\r\n  },\r\n}"
                },
                {
                    "name": "WithInfoDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: true,\r\n    placeholder: 'tt.mm.jjjj',\r\n    info: 'date-info-dark',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "WithMaxDate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: false,\r\n    placeholder: 'tt.mm.jjjj',\r\n    maxDate: new Date(),\r\n  },\r\n}"
                },
                {
                    "name": "WithSelectedDate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    name: 'id',\r\n    label: 'Datum eintragen',\r\n    light: false,\r\n    placeholder: 'tt.mm.jjjj',\r\n    value: new Date(),\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    value: '',\r\n    placeholder: 'placeholder text',\r\n    label: 'label'\r\n  },\r\n}"
                },
                {
                    "name": "DefaultDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    value: '',\r\n    light: true,\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    value: 'der Text',\r\n    inputDisabled: true,\r\n    touched: true,\r\n  },\r\n}"
                },
                {
                    "name": "multipleRows",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    multiLine: true,\r\n    value: 'ganz langer Text, <br> zum Beispiel Anschlussfinanzierung. Kann auch <a href=\"#\">links</a> enthalten.',\r\n  },\r\n}"
                },
                {
                    "name": "multipleRowsTouched",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'id',\r\n    touched: true,\r\n    multiLine: true,\r\n    value: 'ganz langer Text, <br> zum Beispiel Anschlussfinanzierung. Kann auch <a href=\"#\">links</a> enthalten.',\r\n  },\r\n}"
                },
                {
                    "name": "withInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    light: false,\r\n    value: 'Input kann auch <a href=\"#\">links</a.',\r\n    info: 'test-info',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n}"
                },
                {
                    "name": "withInfoDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    value: '',\r\n    light: true,\r\n    info: 'test-info-dark',\r\n    infoText: 'info Text',\r\n    infoHeader: 'info Überschrift',\r\n  },\r\n  parameters: {\r\n    backgrounds: {\r\n      default: 'dunkel',\r\n      values: [\r\n        { name: 'dunkel', value: '#203864' },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/tiles/tile-checkbox/tile-checkbox.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/tiles/tile-checkbox/tile-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    image: 'assets/images/signal-bars-poor.svg',\r\n    checked: false,\r\n    name: 'name',\r\n    value: 'the value',\r\n    state: 'success',\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/tiles/tile-checkbox-group/tile-checkbox-group.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/tiles/tile-checkbox-group/tile-checkbox-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    tiles: testTiles\r\n  },\r\n}"
                },
                {
                    "name": "testTiles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/tiles/tile-checkbox-group/tile-checkbox-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'name': 'name',\r\n    'state': 'success',\r\n    'checked': false,\r\n    'image': 'assets/images/houseCheckmark.svg',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'label2',\r\n    'name': 'name',\r\n    'state': 'warning',\r\n    'checked': false,\r\n    'image': 'assets/images/houseFlag.svg',\r\n    'value': 'value2'\r\n  },\r\n  {\r\n    'label': 'label3',\r\n    'name': 'name',\r\n    'state': 'error',\r\n    'checked': false,\r\n    'image': 'assets/images/houseTree.svg',\r\n    'value': 'value3'\r\n  }\r\n]"
                }
            ],
            "projects/fm-library/src/lib/tiles/tile-group/tile-group.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/tiles/tile-group/tile-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    tiles: testTiles\r\n  },\r\n}"
                },
                {
                    "name": "testTiles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/tiles/tile-group/tile-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    'label': 'label1',\r\n    'name': 'name',\r\n    'state': 'success',\r\n    'checked': false,\r\n    'image': 'assets/images/houseCheckmark.svg',\r\n    'value': 'value1'\r\n  },\r\n  {\r\n    'label': 'label2',\r\n    'name': 'name',\r\n    'state': 'warning',\r\n    'checked': false,\r\n    'image': 'assets/images/houseFlag.svg',\r\n    'value': 'value2'\r\n  },\r\n  {\r\n    'label': 'label3',\r\n    'name': 'name',\r\n    'state': 'error',\r\n    'checked': false,\r\n    'image': 'assets/images/houseTree.svg',\r\n    'value': 'value3'\r\n  }\r\n]"
                }
            ],
            "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    tabs: testTabsThree\r\n  },\r\n}"
                },
                {
                    "name": "testTabsThree",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    'label': 'N° 1',\r\n    'name': 'name',\r\n    'state': 'success',\r\n    'value': 'value1',\r\n    'checked': true\r\n  },\r\n  {\r\n    'label': 'N° 2',\r\n    'name': 'name',\r\n    'value': 'value2',\r\n    'checked': false\r\n  },\r\n  {\r\n    'label': 'N° 3',\r\n    'name': 'name',\r\n    'state': 'success',\r\n    'value': 'value3',\r\n    'checked': false\r\n  }\r\n]"
                },
                {
                    "name": "testTabsTwo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    'label': 'N° 1',\r\n    'name': 'name',\r\n    'state': 'error',\r\n    'value': 'value1',\r\n    'checked': true\r\n  },\r\n  {\r\n    'label': 'N° 2',\r\n    'name': 'name',\r\n    'value': 'value2',\r\n    'checked': false\r\n  }\r\n]"
                },
                {
                    "name": "TwoTabs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    tabs: testTabsTwo\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/tiles/tile-rating/tile-rating.stories.ts": [
                {
                    "name": "Default4Stars",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/tiles/tile-rating/tile-rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'name',\r\n    stars: 4,\r\n    info: 'rating-info',\r\n  },\r\n}"
                },
                {
                    "name": "Default5Stars",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/tiles/tile-rating/tile-rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'das Label',\r\n    name: 'name',\r\n    stars: 5,\r\n    info: 'info-rating-dark',\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts": [
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    state: 'error',\r\n  },\r\n}"
                },
                {
                    "name": "Optional",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    state: 'optional',\r\n  },\r\n}"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    state: 'success',\r\n  },\r\n}"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    state: 'warning',\r\n  },\r\n}"
                }
            ],
            "projects/fm-library/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/fm-library/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    layout: 'centered',\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n    backgrounds: {\r\n      default: 'hell',\r\n      values: [\r\n        {\r\n          name: 'hell',\r\n          value: '#C0D1E1',\r\n        },\r\n        {\r\n          name: 'dunkel',\r\n          value: '#203864',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/fm-library/src/lib/counter/counter.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CounterComponent>",
                    "file": "projects/fm-library/src/lib/counter/counter.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/buttons/button-group/button-group.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonGroupComponent>",
                    "file": "projects/fm-library/src/lib/buttons/button-group/button-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/buttons/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderButtonComponent>",
                    "file": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProgressButtonComponent>",
                    "file": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StateIconComponent>",
                    "file": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/buttons/info-button/info-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InfoButtonComponent>",
                    "file": "projects/fm-library/src/lib/buttons/info-button/info-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/info/tooltip/tooltip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TooltipComponent>",
                    "file": "projects/fm-library/src/lib/info/tooltip/tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DropdownComponent>",
                    "file": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputButtonComponent>",
                    "file": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/inputs/input/input.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputDateComponent>",
                    "file": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TextAreaComponent>",
                    "file": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/tiles/tile-checkbox/tile-checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TileCheckboxComponent>",
                    "file": "projects/fm-library/src/lib/tiles/tile-checkbox/tile-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/tiles/tile-checkbox-group/tile-checkbox-group.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TileCheckboxGroupComponent>",
                    "file": "projects/fm-library/src/lib/tiles/tile-checkbox-group/tile-checkbox-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/tiles/tile-group/tile-group.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TileGroupComponent>",
                    "file": "projects/fm-library/src/lib/tiles/tile-group/tile-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/tiles/tile-rating/tile-rating.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TileRatingComponent>",
                    "file": "projects/fm-library/src/lib/tiles/tile-rating/tile-rating.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/text/header-text/header-text.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderTextComponent>",
                    "file": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TileTextComponent>",
                    "file": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/toggle/toggle/toggle.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToggleComponent>",
                    "file": "projects/fm-library/src/lib/toggle/toggle/toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/toggle/toggle-checkbox/toggle-checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToggleCheckboxComponent>",
                    "file": "projects/fm-library/src/lib/toggle/toggle-checkbox/toggle-checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToggleHorizontalComponent>",
                    "file": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToggleTristateComponent>",
                    "file": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToggleVerticalComponent>",
                    "file": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/fm-library/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button-group/button-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button-group/button-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button-group/button-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button-group/button-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testButtons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customWidth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconLeft",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconLeftDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconRight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IconRightDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/header-button/header-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Active",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/header-button/header-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Inactive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/info-button/info-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InfoButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/info-button/info-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/info-button/info-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/progress-button/progress-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dashboard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/buttons/progress-button/progress-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Ende",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/counter/counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/counter/counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/counter/counter.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/icons/state-icon/state-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StateIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Optional",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/icons/state-icon/state-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/info/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/info/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/info/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/dropdown/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "placeholderTest",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/dropdown/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithInfoDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-button/input-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "noValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "short",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "shortDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "warningDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-button/input-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withInfoDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-date/input-date.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputDateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithInfoDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithMaxDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input-date/input-date.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithSelectedDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/36",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "successDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/input/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withInfoDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/text-area/text-area.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextAreaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "multipleRows",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "multipleRowsTouched",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/inputs/text-area/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "withInfoDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/services/helper.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HelperService",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/text/header-text/header-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/text/header-text/header-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithInfoDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/text/tile-text/tile-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TileTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/text/tile-text/tile-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithInfoDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/tiles/tile-checkbox-group/tile-checkbox-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TileCheckboxGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/tiles/tile-checkbox-group/tile-checkbox-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/tiles/tile-checkbox-group/tile-checkbox-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testTiles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/tiles/tile-checkbox/tile-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TileCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/tiles/tile-checkbox/tile-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/tiles/tile-group/tile-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TileGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/tiles/tile-group/tile-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/tiles/tile-group/tile-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testTiles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/tiles/tile-rating/tile-rating.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TileRatingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/tiles/tile-rating/tile-rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default4Stars",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/tiles/tile-rating/tile-rating.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default5Stars",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/tiles/tile/tile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-checkbox/toggle-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-checkbox/toggle-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-checkbox/toggle-checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleHorizontalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FiveOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testOptions3",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-horizontal/toggle-horizontal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testOptions5",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleTristateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testTabsThree",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testTabsTwo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-tristate/toggle-tristate.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TwoTabs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleVerticalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FiveOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "multiLine",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testOptions2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testOptions3",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle-vertical/toggle-vertical.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "testOptions5",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle/toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle/toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/lib/toggle/toggle/toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/fm-library/src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}